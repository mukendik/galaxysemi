<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.galaxysemi</groupId>
    <artifactId>fnp-toolkit</artifactId>
    <version>11.11.1-103</version>
    <packaging>pom</packaging>
    <name>Galaxy lib - FNP toolkit</name>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <fnp-version>11.11.1</fnp-version>
        <fnp-version_flex>11_11_1</fnp-version_flex>
        <!--<makeOptions>-j -l 2.5</makeOptions>-->
        <distNameLong>${env.DIST_NAME_LONG}</distNameLong>
        <nmakePath>nmake</nmakePath>
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.flexerasoftware</groupId>
            <artifactId>FlexNetPublisher</artifactId>
            <version>11.11.1-1</version>
            <classifier>${fnp-platform}</classifier>
            <type>${archiveExt}</type>
        </dependency>
    </dependencies>

    <build>
        <sourceDirectory>${project.basedir}/src</sourceDirectory>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>unpack-dependencies</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${project.basedir}/src/main/resources/common</directory>
                                    <filtering>true</filtering>
                                    <excludes />
                                </resource>
                                <resource>
                                    <directory>${project.basedir}/src/main/resources/${distName}</directory>
                                    <filtering>true</filtering>
                                    <excludes />
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <!-- Encrypt the config file -->
                        <id>encrypt</id>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipSignProcess}</skip>
                            <workingDirectory>${project.build.directory}/${fnp-platform}/publisher</workingDirectory>
                            <executable>${project.build.directory}/${fnp-platform}/publisher/tcencrypt</executable>
                            <arguments>
                                <argument>-i</argument>
                                <argument>galaxylmTrustedConfigIn.xml</argument>
                                <argument>-o</argument>
                                <argument>galaxylmTrustedConfigOut.xml</argument>
                                <argument>-k</argument>
                                <argument>galaxylmKeyFile.xml</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <!-- Sign galaxylmTrustedConfigOut.xml file -->
                        <id>sign</id>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipSignProcess}</skip>
                            <workingDirectory>${project.build.directory}/${fnp-platform}/publisher</workingDirectory>
                            <executable>${project.build.directory}/${fnp-platform}/publisher/xmlsign</executable>
                            <arguments>
                                <argument>-a</argument>
                                <argument>../ActivationSettings/publisher.xml</argument>
                                <argument>-i</argument>
                                <argument>galaxylmTrustedConfigOut.xml</argument>
                                <argument>-o</argument>
                                <argument>galaxylmTrustedConfigOut.xml</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <!--Copy publisher/galaxylmKeyFile.xml to publisher/xml/ directory-->
                        <id>moveXml</id>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipSignProcess}</skip>
                            <executable>cp</executable>
                            <arguments>
                                <argument>${project.build.directory}/${fnp-platform}/publisher/galaxylmKeyFile.xml</argument>
                                <argument>${project.build.directory}/${fnp-platform}/publisher/xml/</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <!--Delete publisher/xml/DemoKeyout.xml-->
                        <id>remove-demo</id>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipSignProcess}</skip>
                            <executable>rm</executable>
                            <arguments>
                                <argument>-rf</argument>
                                <argument>${project.build.directory}/${fnp-platform}/publisher/xml/DemoKeyout.xml</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <!-- Encrypt the config file -->
                        <id>encryptVmid</id>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipSignProcess}</skip>
                            <workingDirectory>${project.build.directory}/${fnp-platform}/publisher</workingDirectory>
                            <executable>${project.build.directory}/${fnp-platform}/publisher/tcencrypt</executable>
                            <arguments>
                                <argument>-i</argument>
                                <argument>galaxylmTrustedConfigVmidIn.xml</argument>
                                <argument>-o</argument>
                                <argument>galaxylmTrustedConfigVmidOut.xml</argument>
                                <argument>-k</argument>
                                <argument>galaxylmKeyFileVmid.xml</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <!-- Sign galaxylmTrustedConfigOutVmid.xml file -->
                        <id>signVmid</id>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipSignProcess}</skip>
                            <workingDirectory>${project.build.directory}/${fnp-platform}/publisher</workingDirectory>
                            <executable>${project.build.directory}/${fnp-platform}/publisher/xmlsign</executable>
                            <arguments>
                                <argument>-a</argument>
                                <argument>../ActivationSettings/publisher.xml</argument>
                                <argument>-i</argument>
                                <argument>galaxylmTrustedConfigVmidOut.xml</argument>
                                <argument>-o</argument>
                                <argument>galaxylmTrustedConfigVmidOut.xml</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <!--Copy publisher/galaxylmKeyFileVmid.xml to publisher/xml/ directory-->
                        <id>copy-xmlVmid</id>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipSignProcess}</skip>
                            <executable>cp</executable>
                            <arguments>
                                <argument>${project.build.directory}/${fnp-platform}/publisher/galaxylmKeyFileVmid.xml</argument>
                                <argument>${project.build.directory}/${fnp-platform}/publisher/xml/</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <!--Delete publisher/xml/DemoKeyoutVmid.xml-->
                        <id>remove-demoVmid</id>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipSignProcess}</skip>
                            <executable>rm</executable>
                            <arguments>
                                <argument>-rf</argument>
                                <argument>${project.build.directory}/${fnp-platform}/publisher/xml/DemoKeyoutVmid.xml</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <!-- Move galaxylm.lic -->
                        <id>move-galaxylm.lic</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipSignProcess}</skip>
                            <executable>cp</executable>
                            <arguments>
                                <argument>${project.build.directory}/galaxylm/galaxylm.lic</argument>
                                <argument>${project.build.directory}/${fnp-platform}/</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <!-- Generate licence file  -->
                        <id>build-galaxylm.lic</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipSignProcess}</skip>
                            <workingDirectory>${project.build.directory}/${fnp-platform}</workingDirectory>
                            <executable>${project.build.directory}/${fnp-platform}/lmcrypt</executable>
                            <arguments>
                                <argument>galaxylm.lic</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <executions>
                    <execution>
                        <id>assembly-inc</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <appendAssemblyId>false</appendAssemblyId>
                            <attach>false</attach>
                            <descriptors>
                                <descriptor>${basedir}/src/main/assembly/assembly-inc.xml</descriptor>
                            </descriptors>
                            <finalName>${project.artifactId}-inc-${project.version}</finalName>
                        </configuration>
                    </execution>
                    <execution>
                        <id>assembly-lib</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <appendAssemblyId>false</appendAssemblyId>
                            <attach>false</attach>
                            <descriptors>
                                <descriptor>${basedir}/src/main/assembly/assembly-${osName}.xml</descriptor>
                            </descriptors>
                            <finalName>${project.artifactId}-${project.version}</finalName>
                        </configuration>
                    </execution>
                    <execution>
                        <id>assembly-galaxylm</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <appendAssemblyId>false</appendAssemblyId>
                            <attach>false</attach>
                            <descriptors>
                                <descriptor>${basedir}/src/main/assembly/assembly-galaxylm.xml</descriptor>
                            </descriptors>
                            <finalName>${project.artifactId}-galaxylm-${project.version}</finalName>
                        </configuration>
                    </execution>
                    <execution>
                        <id>assembly-fnp-utils</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <appendAssemblyId>false</appendAssemblyId>
                            <attach>false</attach>
                            <descriptors>
                                <descriptor>${basedir}/src/main/assembly/assembly-fnp-utils-${osName}.xml</descriptor>
                            </descriptors>
                            <finalName>${project.artifactId}-fnp-utils-${project.version}</finalName>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-artifacts</id>
                        <phase>package</phase>
                        <goals>
                            <goal>attach-artifact</goal>
                        </goals>
                        <configuration>
                            <artifacts>
                                <artifact>
                                    <file>${project.build.directory}/${project.artifactId}-inc-${project.version}.zip</file>
                                    <classifier>inc-${distNameLong}</classifier>
                                    <type>zip</type>
                                </artifact>
                                <artifact>
                                    <file>${project.build.directory}/${project.artifactId}-${project.version}.${archiveExt}</file>
                                    <classifier>${distNameLong}</classifier>
                                    <type>${archiveExt}</type>
                                </artifact>
                                <artifact>
                                    <file>${project.build.directory}/${project.artifactId}-galaxylm-${project.version}.${archiveExt}</file>
                                    <classifier>galaxylm-${distNameLong}</classifier>
                                    <type>${archiveExt}</type>
                                </artifact>
                                <artifact>
                                    <file>${project.build.directory}/${project.artifactId}-fnp-utils-${project.version}.${archiveExt}</file>
                                    <classifier>fnp-utils-${distNameLong}</classifier>
                                    <type>${archiveExt}</type>
                                </artifact>
                            </artifacts>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <scm>
        <url>https://github.com/Galaxy-Semi/ci-pilot</url>
        <connection>scm:git:ssh://git@github.com/Galaxy-Semi/ci-pilot.git</connection>
        <developerConnection>scm:git:ssh://git@github.com/Galaxy-Semi/ci-pilot.git</developerConnection>
    </scm>

    <profiles>
        <profile>
            <activation>
                <property>
                    <name>X</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>validate</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <echoproperties />
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>mac64</id>
            <activation>
                <property>
                    <name>mac64</name>
                </property>
            </activation>
            <properties>
                <binDir>bin</binDir>
                <libDir>lib</libDir>
                <osName>mac</osName>
                <makeDist>mac</makeDist>
                <distName>mac</distName>
                <!--<distNameLong>mac64</distNameLong>-->
                <makespec>macx-clang</makespec>
                <fnp-platform>universal_mac10</fnp-platform>
                <libSuffix>lib</libSuffix>
                <libPostfix>.*dylib</libPostfix>
                <makeCmd>make</makeCmd>
                <archiveExt>tar.gz</archiveExt>
                <fnp-proxy-script>make_fnp_proxy.mac.sh</fnp-proxy-script>
                <makefile>Makefile_mac</makefile>
                <bitrockArch>x64</bitrockArch>
                <bitrockExtension>zip</bitrockExtension>
                <scriptPackageFolder>unix</scriptPackageFolder>
                <lmadmin-fnp-platform>universal_mac10</lmadmin-fnp-platform>
                <lmadminArchiveExt>zip</lmadminArchiveExt>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>patch_makefile_for_lm_new.o</id>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <workingDirectory>${project.build.directory}/${fnp-platform}</workingDirectory>
                                    <executable>sed</executable>
                                    <commandlineArgs>-i ".backup" '/rm -f lm_new.o/d' ./makefile.act</commandlineArgs>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>unix</id>
            <activation>
                <property>
                    <name>!win</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.gmaven</groupId>
                        <artifactId>groovy-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <!--<id>ranlib</id>-->
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <configuration>
                                    <source>
                                                  <![CDATA[
def source = new File( "." );
source.eachFileMatch ~/.*\.a/, { file ->
  def process = "ranlib ${file}".execute();
  println "result: ${process.text}";
}
                                                  ]]>
                                    </source>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <!-- make act -->
                                <id>make-act</id>
                                <phase>compile</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <workingDirectory>${project.build.directory}/${fnp-platform}</workingDirectory>
                                    <executable>make</executable>
                                    <!--<commandlineArgs>${makeOptions} -f makefile.act galaxylm</commandlineArgs>-->
                                    <!--<commandlineArgs>-f makefile.act galaxylm</commandlineArgs>-->
                                    <commandlineArgs>-f makefile.act</commandlineArgs>
                                    <environmentVariables>
                                        <PREPARCHIVE>${project.build.directory}/${fnp-platform}/preparchive_${fnp-version}.yaa</PREPARCHIVE>
                                    </environmentVariables>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>linux</id>
            <activation>
                <property>
                    <name>linux</name>
                </property>
            </activation>
            <properties>
                <binDir>bin</binDir>
                <libDir>lib</libDir>
                <osName>linux</osName>
                <makeDist>linux</makeDist>
                <libSuffix>lib</libSuffix>
                <libPostfix>.so*</libPostfix>
                <makeCmd>make</makeCmd>
                <archiveExt>tar.gz</archiveExt>
                <fnp-proxy-script>make_fnp_proxy.linux.sh</fnp-proxy-script>
                <makefile>Makefile_linux</makefile>
                <bitrockExtension>run</bitrockExtension>
                <scriptPackageFolder>unix</scriptPackageFolder>
                <lmadmin-fnp-platform>i86_lsb</lmadmin-fnp-platform>
                <lmadminArchiveExt>bin</lmadminArchiveExt>
            </properties>
        </profile>
        <profile>
            <id>linux32</id>
            <activation>
                <activeByDefault>true</activeByDefault>
                <property>
                    <name>linux32</name>
                </property>
            </activation>
            <properties>
                <distName>linux32</distName>
                <makespec>linux-g++-32</makespec>
                <fnp-platform>i86_lsb</fnp-platform>
                <bitrockArch>x32</bitrockArch>
            </properties>
        </profile>
        <profile>
            <id>linux64</id>
            <activation>
                <property>
                    <name>linux64</name>
                </property>
            </activation>
            <properties>
                <distName>linux64</distName>
                <makespec>linux-g++-64</makespec>
                <fnp-platform>x64_lsb</fnp-platform>
                <bitrockArch>x64</bitrockArch>
            </properties>
        </profile>
        <profile>
            <id>win</id>
            <activation>
                <property>
                    <name>win</name>
                </property>
            </activation>
            <properties>
                <binDir />
                <libDir />
                <osName>win</osName>
                <exeExt>.exe</exeExt>
                <archiveExt>zip</archiveExt>
                <libSuffix />
                <libPostfix>.dll</libPostfix>
                <bitrockExtension>exe</bitrockExtension>
                <scriptPackageFolder>windows_scripts</scriptPackageFolder>
                <lmadmin-fnp-platform>i86_n3</lmadmin-fnp-platform>
                <lmadminArchiveExt>exe</lmadminArchiveExt>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>1.6</version>
                        <executions>
                            <execution>
                                <id>moveXml</id>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <!-- Copy publisher/galaxylmKeyFile.xml to publisher/xml/ directory -->
                                        <copy file="${project.build.directory}/${fnp-platform}/publisher/galaxylmKeyFile.xml" todir="${project.build.directory}/${fnp-platform}/publisher/xml/" />
                                        <!-- Delete publisher/xml/DemoKeyout.xml -->
                                        <delete file="${project.build.directory}/${fnp-platform}/publisher/xml/DemoKeyout.xml" />
                                        <!-- Copy publisher/galaxylmKeyFileVmid.xml to publisher/xml/ directory -->
                                        <copy file="${project.build.directory}/${fnp-platform}/publisher/galaxylmKeyFileVmid.xml" todir="${project.build.directory}/${fnp-platform}/publisher/xml/" />
                                        <!-- Delete publisher/xml/DemoKeyoutVmid.xml -->
                                        <delete file="${project.build.directory}/${fnp-platform}/publisher/xml/DemoKeyoutVmid.xml" />
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <!-- make act -->
                                <id>make-act</id>
                                <phase>compile</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <workingDirectory>${project.build.directory}/${fnp-platform}</workingDirectory>
                                    <environmentScript>${env.VCVARSALL_BAT}</environmentScript>
                                    <executable>"${nmakePath}"</executable>
                                    <commandlineArgs>-f makefile.act galaxylm.exe</commandlineArgs>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>win32</id>
            <activation>
                <property>
                    <name>win32</name>
                </property>
            </activation>
            <properties>
                <makeDist>win32</makeDist>
                <distName>win32</distName>
                <makespec>win32-g++</makespec>
                <fnp-platform>i86_n3</fnp-platform>
                <makeCmd>mingw32-make</makeCmd>
                <fnp-proxy-script>"cmd /c make_fnp_proxy.win.bat"</fnp-proxy-script>
                <makefile>Makefile_win32</makefile>
                <destDir>${buildMode}/</destDir>
                <bitrockArch>x32</bitrockArch>
                <env.OS_ARCH>win32</env.OS_ARCH>
            </properties>
        </profile>
        <profile>
            <id>win64</id>
            <activation>
                <property>
                    <name>win64</name>
                </property>
            </activation>
            <properties>
                <makeDist>win64</makeDist>
                <distName>win64</distName>
                <makespec>win32-g++</makespec>
                <fnp-platform>x64_n6</fnp-platform>
                <makeCmd>mingw32-make</makeCmd>
                <fnp-proxy-script>make_fnp_proxy.win.bat</fnp-proxy-script>
                <makefile>Makefile_win32</makefile>
                <destDir>${buildMode}/</destDir>
                <bitrockArch>x64</bitrockArch>
                <env.OS_ARCH>win64</env.OS_ARCH>
            </properties>
        </profile>
        <profile>
            <id>skipSignProcess</id>
            <activation>
                <property>
                    <name>!noSkipSignProcess</name>
                </property>
            </activation>
            <properties>
                <skipSignProcess>true</skipSignProcess>
            </properties>
        </profile>
    </profiles>

    <distributionManagement>
        <repository>
            <id>releases</id>
            <name>Galaxy Semi Internal Releases Repository</name>
            <url>http://nexus.galaxysemi.com/content/repositories/releases</url>
        </repository>
        <snapshotRepository>
            <id>snapshots</id>
            <name>Galaxy Semi Internal Snapshots Repository</name>
            <url>http://nexus.galaxysemi.com/content/repositories/snapshots</url>
        </snapshotRepository>
    </distributionManagement>
</project>
