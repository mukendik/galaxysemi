<html>
<head>
</head>
<body>
<table border="0" width="820" cellspacing="0" cellpadding="0">
  <tr>
    <td width="150" valign="top" align="left">
      <p align="left"> <img border="0" src="../images/index.png" width="170" height="40">
    </td>
    <td width="650"><b>Var and Const<br>
      </b><img border="0" src="../../html/images/ruler.png" width="616" height="8">
    </td>
  </tr>
  <tr>
    <td width="170" valign="top" align="left"><img border="0" src="../images/rarrow.png" width="6" height="9">
      <a href="scripting.htm">Introduction<br>
      </a><img border="0" src="../images/rarrow.png" width="6" height="9">  <a href="run1.htm">Running a
      Script</a><br>
      <img border="0" src="../images/rarrow.png" width="6" height="9">
      <a href="lang1.htm">Language<br>
      </a>&nbsp;&nbsp;&nbsp;&nbsp; <a href="lang2.htm">Comments</a><br>
      &nbsp;&nbsp;&nbsp;&nbsp; <a href="lang3.htm">Numbers</a><br>
      &nbsp; &nbsp;&nbsp;&nbsp;<a href="lang4.htm">Literals</a><br>
      &nbsp; &nbsp;&nbsp;&nbsp;<a href="lang5.htm">Var
      and const<br>
      </a>
      &nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<a href="lang51.htm">Arrays<br>
      </a>
      &nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<a href="lang52.htm">Initialization</a><br>
      &nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<a href="lang53.htm">Static
      and extern<br>
      </a>
      &nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<a href="lang54.htm">Dynamic
      reallocation</a><br>
      &nbsp; &nbsp;&nbsp;&nbsp;<a href="lang6.htm">Operators</a><br>
      &nbsp; &nbsp;&nbsp;&nbsp;<a href="lang7.htm">Statements
      and&nbsp; blocks</a><br>
      &nbsp; &nbsp;&nbsp;&nbsp;<a href="lang8.htm">Program
      flow</a><br>
      &nbsp; &nbsp;&nbsp;&nbsp;<a href="lang9.htm">Trace
      facility</a><br>
      &nbsp; &nbsp;&nbsp;&nbsp;<a href="lang10.htm">Exception
      handling</a><br>
      &nbsp; &nbsp;&nbsp;&nbsp;<a href="lang11.htm">Functions</a><br>
      &nbsp; &nbsp;&nbsp;&nbsp;<a href="lang12.htm">Predefined
      identifiers</a><br>
      <img border="0" src="../images/rarrow.png" width="6" height="9">
      <a href="direct1.htm">Directives</a><br>
      <img border="0" src="../images/rarrow.png" width="6" height="9">
      <a href="gex1.htm">Gex Report library</a><br>
      <img border="0" src="../images/rarrow.png" width="6" height="9">
      <a href="sys1.htm">System library</a><br>
      <img border="0" src="../images/rarrow.png" width="6" height="9">
      <a href="str1.htm">String library</a><br>
      <img border="0" src="../images/rarrow.png" width="6" height="9">
      <a href="math1.htm">Math library</a><br>
      <img border="0" src="../images/rarrow.png" width="6" height="9">
      <a href="file1.htm">File library</a><br>
    </td>
    <td width="650" valign="top" align="left">There is only one single variable
      type in CSL: <b>var</b>
      <p>A <b>var</b> may hold any number or string. Additionally there may by a
      <b>const</b> qualification; however you don't<br>
      write <b>const var</b> in CSL but simply <i>const</i>.</p>
      <p>Examples:</p>
      <pre>var x, y;
const xMax = 80, yMax = 25;
</pre>
      <p>While <b>var's</b> may change contents during program execution, <b>const's</b>
      cannot be changed after declaration.</p>
      <p><b>var's</b> and <b>const's</b> may be defined anywhere in CSL:</p>
      <pre>function66()
{
  const x = 7;
  for (var k=1; k &lt; x; k++)
  {
    var y = k * 3;
    sysLog(y);
  }
}
</pre>
    </td>
  </tr>
</table>
<p align="left">&nbsp;</p>
<p align="left">&nbsp;</p>
<p align="left">&nbsp;</p>
</body>
</html>
