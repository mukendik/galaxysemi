--
-- First arg is the GexAdmin name
--

DEFINE GEXADMIN=&1
DEFINE LOGGINGMODE=&2

--
-- Create GEXDB tablespaces
--

CREATE TEMPORARY TABLESPACE &GEXADMIN._TEMP 
		TEMPFILE '&GEXADMIN._TEMP.dbf' SIZE 2000M	REUSE AUTOEXTEND 
		ON NEXT	500M MAXSIZE UNLIMITED EXTENT MANAGEMENT LOCAL;

CREATE TABLESPACE &GEXADMIN. 
		&LOGGINGMODE. 
		DATAFILE '&GEXADMIN..dbf' SIZE 5M	REUSE AUTOEXTEND 
		ON NEXT	5M MAXSIZE UNLIMITED EXTENT MANAGEMENT LOCAL 
		SEGMENT SPACE MANAGEMENT	AUTO 
		DEFAULT COMPRESS;

CREATE TABLESPACE &GEXADMIN._WT 
		&LOGGINGMODE. 
		DATAFILE '&GEXADMIN._WT.dbf' SIZE 5M	REUSE AUTOEXTEND 
		ON NEXT	5M MAXSIZE UNLIMITED EXTENT MANAGEMENT LOCAL 
		SEGMENT SPACE MANAGEMENT	AUTO 
		DEFAULT COMPRESS;

CREATE TABLESPACE &GEXADMIN._WT_D 
		&LOGGINGMODE. 
		DATAFILE '&GEXADMIN._WT_D.dbf' SIZE 5M	REUSE AUTOEXTEND 
		ON NEXT	5M MAXSIZE UNLIMITED EXTENT MANAGEMENT LOCAL 
		SEGMENT SPACE MANAGEMENT	AUTO 
		DEFAULT COMPRESS;

CREATE TABLESPACE &GEXADMIN._WT_S 
		&LOGGINGMODE. 
		DATAFILE '&GEXADMIN._WT_S.dbf' SIZE 5M	REUSE AUTOEXTEND 
		ON NEXT	5M MAXSIZE UNLIMITED EXTENT MANAGEMENT LOCAL 
		SEGMENT SPACE MANAGEMENT	AUTO 
		DEFAULT COMPRESS;

CREATE TABLESPACE &GEXADMIN._WT_R 
		&LOGGINGMODE. 
		DATAFILE '&GEXADMIN._WT_R.dbf' SIZE 5M	REUSE AUTOEXTEND 
		ON NEXT	5M MAXSIZE UNLIMITED EXTENT MANAGEMENT LOCAL 
		SEGMENT SPACE MANAGEMENT	AUTO 
		DEFAULT COMPRESS;

CREATE TABLESPACE &GEXADMIN._FT 
		&LOGGINGMODE. 
		DATAFILE '&GEXADMIN._FT.dbf' SIZE 5M	REUSE AUTOEXTEND 
		ON NEXT	5M MAXSIZE UNLIMITED EXTENT MANAGEMENT LOCAL 
		SEGMENT SPACE MANAGEMENT	AUTO 
		DEFAULT COMPRESS;

CREATE TABLESPACE &GEXADMIN._FT_D 
		&LOGGINGMODE. 
		DATAFILE '&GEXADMIN._FT_D.dbf' SIZE 5M	REUSE AUTOEXTEND 
		ON NEXT	5M MAXSIZE UNLIMITED EXTENT MANAGEMENT LOCAL 
		SEGMENT SPACE MANAGEMENT	AUTO 
		DEFAULT COMPRESS;

CREATE TABLESPACE &GEXADMIN._FT_S 
		&LOGGINGMODE. 
		DATAFILE '&GEXADMIN._FT_S.dbf' SIZE 5M	REUSE AUTOEXTEND 
		ON NEXT	5M MAXSIZE UNLIMITED EXTENT MANAGEMENT LOCAL 
		SEGMENT SPACE MANAGEMENT	AUTO 
		DEFAULT COMPRESS;

CREATE TABLESPACE &GEXADMIN._FT_R 
		&LOGGINGMODE. 
		DATAFILE '&GEXADMIN._FT_R.dbf' SIZE 5M	REUSE AUTOEXTEND 
		ON NEXT	5M MAXSIZE UNLIMITED EXTENT MANAGEMENT LOCAL 
		SEGMENT SPACE MANAGEMENT	AUTO 
		DEFAULT COMPRESS;

CREATE TABLESPACE &GEXADMIN._ET 
		&LOGGINGMODE. 
		DATAFILE '&GEXADMIN._ET.dbf' SIZE 5M	REUSE AUTOEXTEND 
		ON NEXT	5M MAXSIZE UNLIMITED EXTENT MANAGEMENT LOCAL 
		SEGMENT SPACE MANAGEMENT	AUTO 
		DEFAULT COMPRESS;

CREATE TABLESPACE &GEXADMIN._ET_D 
		&LOGGINGMODE. 
		DATAFILE '&GEXADMIN._ET_D.dbf' SIZE 5M	REUSE AUTOEXTEND 
		ON NEXT	5M MAXSIZE UNLIMITED EXTENT MANAGEMENT LOCAL 
		SEGMENT SPACE MANAGEMENT	AUTO 
		DEFAULT COMPRESS;

CREATE TABLESPACE &GEXADMIN._ET_S 
		&LOGGINGMODE. 
		DATAFILE '&GEXADMIN._ET_S.dbf' SIZE 5M	REUSE AUTOEXTEND 
		ON NEXT	5M MAXSIZE UNLIMITED EXTENT MANAGEMENT LOCAL 
		SEGMENT SPACE MANAGEMENT	AUTO 
		DEFAULT COMPRESS;

CREATE TABLESPACE &GEXADMIN._ET_R 
		&LOGGINGMODE. 
		DATAFILE '&GEXADMIN._ET_R.dbf' SIZE 5M	REUSE AUTOEXTEND 
		ON NEXT	5M MAXSIZE UNLIMITED EXTENT MANAGEMENT LOCAL 
		SEGMENT SPACE MANAGEMENT	AUTO 
		DEFAULT COMPRESS;

--
-- Create &GEXADMIN. users
--
	
CREATE USER &GEXADMIN. PROFILE DEFAULT
	IDENTIFIED BY gexadmin 
	DEFAULT TABLESPACE &GEXADMIN.
	TEMPORARY TABLESPACE &GEXADMIN._TEMP 
	ACCOUNT UNLOCK;
GRANT CONNECT TO &GEXADMIN.;
GRANT RESOURCE TO &GEXADMIN.;
GRANT OEM_MONITOR TO &GEXADMIN.;
GRANT ALTER TABLESPACE TO &GEXADMIN.;
GRANT CREATE TABLESPACE TO &GEXADMIN.;
GRANT DROP TABLESPACE TO &GEXADMIN.;
GRANT MANAGE TABLESPACE TO &GEXADMIN.;
GRANT IMP_FULL_DATABASE TO &GEXADMIN.;
GRANT EXP_FULL_DATABASE TO &GEXADMIN.;
GRANT SCHEDULER_ADMIN TO &GEXADMIN.; 
ALTER USER &GEXADMIN. DEFAULT ROLE ALL;
GRANT CREATE JOB TO &GEXADMIN.;

CREATE USER &GEXADMIN._USER PROFILE DEFAULT
	IDENTIFIED BY gexuser 
	DEFAULT TABLESPACE &GEXADMIN.
	TEMPORARY TABLESPACE &GEXADMIN._TEMP
	ACCOUNT UNLOCK;
GRANT CONNECT TO &GEXADMIN._USER;
GRANT OEM_MONITOR TO &GEXADMIN._USER;
GRANT EXP_FULL_DATABASE TO &GEXADMIN._USER;

--
-- Create GEXDB tables and indexes
--

--
-- GLOBAL
--
CREATE TABLE &GEXADMIN..GLOBAL_INFO (
	DB_VERSION_NAME		VARCHAR2(255)	NOT NULL,
	DB_VERSION_NB		NUMBER(6)		NOT NULL,
	DB_VERSION_BUILD	NUMBER(6)		NOT NULL
) TABLESPACE &GEXADMIN. PCTFREE 5 PCTUSED 80 &LOGGINGMODE. COMPRESS;

INSERT INTO &GEXADMIN..GLOBAL_INFO VALUES('GEXDB V1.0 B2', 10, 2);


CREATE TABLE &GEXADMIN..PRODUCT (
	PRODUCT_NAME		VARCHAR2(255)	DEFAULT '' NOT NULL,
	DESCRIPTION			VARCHAR2(1000)	DEFAULT NULL
) TABLESPACE &GEXADMIN. PCTFREE 5 PCTUSED 80 &LOGGINGMODE. COMPRESS;


CREATE TABLE &GEXADMIN..FILE_HOST (
	FILE_HOST_ID		NUMBER(10)		NOT NULL,
	HOST_NAME			VARCHAR2(255)	DEFAULT '',
	HOST_FTPUSER		VARCHAR2(255)	DEFAULT '',
	HOST_FTPPASSWORD	VARCHAR2(255)	DEFAULT '',
	HOST_FTPPATH		VARCHAR2(255)	DEFAULT NULL,
	HOST_FTPPORT		NUMBER(4)		DEFAULT 21 NOT NULL,
	CONSTRAINT PK_FILE_HOST PRIMARY KEY	(FILE_HOST_ID)
) TABLESPACE &GEXADMIN. PCTFREE 5 PCTUSED 80 &LOGGINGMODE. COMPRESS;

--
-- ELECTRICAL TEST
--

CREATE TABLE &GEXADMIN..ET_LOT (
	LOT_ID				VARCHAR2(255)	DEFAULT '' NOT NULL,
	TRACKING_LOT_ID		VARCHAR2(255)	DEFAULT NULL,
	PRODUCT_NAME		VARCHAR2(255)	DEFAULT NULL,
	NB_PARTS			NUMBER(8)		DEFAULT 0 NOT NULL,
	NB_PARTS_GOOD		NUMBER(8)		DEFAULT 0 NOT NULL
) TABLESPACE &GEXADMIN._ET PCTFREE 5 PCTUSED 80 &LOGGINGMODE. COMPRESS;


CREATE TABLE &GEXADMIN..ET_SPLITLOT (
	SPLITLOT_ID			NUMBER(10)		NOT NULL,
	LOT_ID				VARCHAR2(255)	DEFAULT '' NOT NULL,
	SUBLOT_ID			VARCHAR2(255)	DEFAULT '',
	START_T				NUMBER(10)		DEFAULT 0 NOT NULL,
	FINISH_T			NUMBER(10)		DEFAULT 0 NOT NULL,
	WEEK_NB				NUMBER(3)		DEFAULT 0 NOT NULL,
	YEAR				NUMBER(5)		DEFAULT 0 NOT NULL,
	TESTER_NAME			VARCHAR2(255)	DEFAULT '',
	TESTER_TYPE			VARCHAR2(255)	DEFAULT '',
	FLAGS				CHAR(2)			DEFAULT NULL,
	NB_PARTS			NUMBER(8)		DEFAULT 0 NOT NULL,
	NB_PARTS_GOOD		NUMBER(8)		DEFAULT 0 NOT NULL,
	DATA_PROVIDER		VARCHAR2(255)	DEFAULT '',
	DATA_TYPE			VARCHAR2(255)	DEFAULT '',
	PROD_DATA			CHAR(1)			DEFAULT 'Y' NOT NULL,
	JOB_NAM				VARCHAR2(255)	DEFAULT NULL,
	JOB_REV				VARCHAR2(255)	DEFAULT NULL,
	OPER_NAM			VARCHAR2(255)	DEFAULT NULL,
	EXEC_TYP			VARCHAR2(255)	DEFAULT NULL,
	EXEC_VER			VARCHAR2(255)	DEFAULT NULL,
	FACIL_ID			VARCHAR2(255)	DEFAULT NULL,
	PART_TYP			VARCHAR2(256)	DEFAULT NULL,	
	USER_TXT			VARCHAR2(256)	DEFAULT NULL,	
	FAMLY_ID			VARCHAR2(256)	DEFAULT NULL,	
	PROC_ID				VARCHAR2(256)	DEFAULT NULL,
	FILE_HOST_ID		NUMBER(10)		DEFAULT 0,
	FILE_PATH			VARCHAR2(255)	DEFAULT '',
	FILE_NAME			VARCHAR2(255)	DEFAULT '',
	VALID_SPLITLOT		CHAR(1)			DEFAULT 'N' NOT NULL,
	INSERTION_TIME		NUMBER(10)		DEFAULT NULL,
	SUBCON_LOT_ID		VARCHAR2(255)	DEFAULT '',
	CONSTRAINT PK_ET_SPLITLOT PRIMARY KEY (SPLITLOT_ID)
)
PARTITION BY RANGE (SPLITLOT_ID) 
(PARTITION FIRSTPART VALUES LESS THAN (MAXVALUE) TABLESPACE &GEXADMIN._ET_D	PCTFREE 5 PCTUSED 80 &LOGGINGMODE. COMPRESS);


CREATE TABLE &GEXADMIN..ET_WAFER_INFO (
	SPLITLOT_ID			NUMBER(10)		DEFAULT 0 NOT NULL,
	WAFER_ID			VARCHAR2(255)	DEFAULT NULL,
	FAB_ID				VARCHAR2(255)	DEFAULT NULL,
	FRAME_ID			VARCHAR2(255)	DEFAULT NULL,
	MASK_ID				VARCHAR2(255)	DEFAULT NULL,
	WAFER_SIZE			NUMBER			DEFAULT NULL,
	DIE_HT				NUMBER			DEFAULT NULL,
	DIE_WID				NUMBER			DEFAULT NULL,
	WAFER_UNITS			NUMBER(3)		DEFAULT NULL,
	WAFER_FLAT			CHAR(1)			DEFAULT NULL,
	CENTER_X			NUMBER(5)		DEFAULT NULL,
	CENTER_Y			NUMBER(5)		DEFAULT NULL,
	POS_X				CHAR(1)			DEFAULT NULL,
	POS_Y				CHAR(1)			DEFAULT NULL
)
PARTITION BY RANGE (SPLITLOT_ID) 
(PARTITION FIRSTPART VALUES LESS THAN (MAXVALUE) TABLESPACE &GEXADMIN._ET_D PCTFREE 5 PCTUSED 80 &LOGGINGMODE. COMPRESS);


CREATE TABLE &GEXADMIN..ET_HBIN (
	SPLITLOT_ID			NUMBER(10)		DEFAULT 0 NOT NULL,
	HBIN_NO				NUMBER(5)		DEFAULT 0 NOT NULL,
	HBIN_NAME			VARCHAR2(255)	DEFAULT '',
	HBIN_CAT			CHAR(1)			DEFAULT NULL,
	BIN_COUNT			NUMBER(8)		DEFAULT 0 NOT NULL
)
PARTITION BY RANGE (SPLITLOT_ID) 
(PARTITION FIRSTPART VALUES LESS THAN (MAXVALUE) TABLESPACE &GEXADMIN._ET_S PCTFREE 5 PCTUSED 80 &LOGGINGMODE. COMPRESS);


CREATE TABLE &GEXADMIN..ET_SBIN (
	SPLITLOT_ID			NUMBER(10)		DEFAULT 0 NOT NULL,
	SBIN_NO				NUMBER(5)		DEFAULT 0 NOT NULL,
	SBIN_NAME			VARCHAR2(255)	DEFAULT '',
	SBIN_CAT			CHAR(1)			DEFAULT NULL,
	BIN_COUNT			NUMBER(8)		DEFAULT 0 NOT NULL
)
PARTITION BY RANGE (SPLITLOT_ID) 
(PARTITION FIRSTPART VALUES LESS THAN (MAXVALUE) TABLESPACE &GEXADMIN._ET_S PCTFREE 5 PCTUSED 80 &LOGGINGMODE. COMPRESS);


CREATE TABLE &GEXADMIN..ET_RUN (
	SPLITLOT_ID			NUMBER(10)		DEFAULT 0 NOT NULL,
	RUN_ID				NUMBER(5)		DEFAULT 0 NOT NULL,
	PART_ID				VARCHAR2(255)	DEFAULT NULL,
	PART_X				NUMBER(6)		DEFAULT NULL,
	PART_Y				NUMBER(6)		DEFAULT NULL,
	HBIN_NO				NUMBER(5)		DEFAULT 0 NOT NULL,
	SBIN_NO				NUMBER(5)		DEFAULT NULL,
	TTIME				NUMBER(10)		DEFAULT NULL,
	TESTS_EXECUTED		NUMBER(5)		DEFAULT 0 NOT NULL,
	TESTS_FAILED		NUMBER(5)		DEFAULT 0 NOT NULL,
	FIRSTFAIL_TNUM		NUMBER(10)		DEFAULT NULL,
	FIRSTFAIL_TNAME		VARCHAR2(255)	DEFAULT NULL,
	RETEST_INDEX		NUMBER(3)		DEFAULT 0 NOT NULL
)
PARTITION BY RANGE (SPLITLOT_ID) 
(PARTITION FIRSTPART VALUES LESS THAN (MAXVALUE) TABLESPACE &GEXADMIN._ET_R PCTFREE 5 PCTUSED 80 &LOGGINGMODE. COMPRESS);


CREATE TABLE &GEXADMIN..ET_PTEST_INFO (
	SPLITLOT_ID			NUMBER(10)		DEFAULT 0 NOT NULL,
	PTEST_INFO_ID		NUMBER(5)		DEFAULT 0 NOT NULL,
	TNUM				NUMBER(10)		DEFAULT 0 NOT NULL,
	TNAME				VARCHAR2(255)	DEFAULT '',
	UNITS				VARCHAR2(255)	DEFAULT '',
	FLAGS				CHAR(1)			DEFAULT NULL,
	LL					NUMBER			DEFAULT NULL,
	HL					NUMBER			DEFAULT NULL,
	TESTSEQ				NUMBER(5)		DEFAULT NULL
)
PARTITION BY RANGE (SPLITLOT_ID) 
(PARTITION FIRSTPART VALUES LESS THAN (MAXVALUE) TABLESPACE &GEXADMIN._ET_S PCTFREE 5 PCTUSED 80 &LOGGINGMODE. COMPRESS);


CREATE TABLE &GEXADMIN..ET_PTEST_STATS (
	SPLITLOT_ID			NUMBER(10)		DEFAULT 0 NOT NULL,
	PTEST_INFO_ID		NUMBER(5)		DEFAULT 0 NOT NULL,
	EXEC_COUNT			NUMBER(5)		DEFAULT NULL,
	FAIL_COUNT			NUMBER(5)		DEFAULT NULL,
	MIN_VALUE			NUMBER			DEFAULT NULL,
	MAX_VALUE			NUMBER			DEFAULT NULL,
	SUM					NUMBER			DEFAULT NULL,
	SQUARE_SUM			NUMBER			DEFAULT NULL
)
PARTITION BY RANGE (SPLITLOT_ID) 
(PARTITION FIRSTPART VALUES LESS THAN (MAXVALUE) TABLESPACE &GEXADMIN._ET_S PCTFREE 5 PCTUSED 80 &LOGGINGMODE. COMPRESS);


CREATE TABLE &GEXADMIN..ET_PTEST_RESULTS (
	SPLITLOT_ID			NUMBER(10)		DEFAULT 0 NOT NULL,
	PTEST_INFO_ID		NUMBER(5)		DEFAULT 0 NOT NULL,
	RUN_ID				NUMBER(5)		DEFAULT 0 NOT NULL,
	FLAGS				CHAR(1)			DEFAULT NULL,
	VALUE				NUMBER			DEFAULT NULL
)
PARTITION BY RANGE (SPLITLOT_ID) 
(PARTITION FIRSTPART VALUES LESS THAN (MAXVALUE) TABLESPACE &GEXADMIN._ET_R PCTFREE 5 PCTUSED 80 &LOGGINGMODE. COMPRESS);


CREATE INDEX &GEXADMIN..ET_PTEST_RESULTS 
		ON &GEXADMIN..ET_PTEST_RESULTS	(SPLITLOT_ID, 
		PTEST_INFO_ID) LOCAL COMPRESS;

--
-- WAFER SORT
--


CREATE TABLE &GEXADMIN..WT_LOT (
	LOT_ID				VARCHAR2(255)	DEFAULT '' NOT NULL,
	TRACKING_LOT_ID		VARCHAR2(255)	DEFAULT NULL,
	PRODUCT_NAME		VARCHAR2(255)	DEFAULT NULL,
	NB_PARTS			NUMBER(8)		DEFAULT 0 NOT NULL,
	NB_PARTS_GOOD		NUMBER(8)		DEFAULT 0 NOT NULL
) TABLESPACE &GEXADMIN._WT PCTFREE 5 PCTUSED 80 &LOGGINGMODE. COMPRESS;


CREATE TABLE &GEXADMIN..WT_SPLITLOT (
	SPLITLOT_ID			NUMBER(10)		NOT NULL,
	LOT_ID				VARCHAR2(255)	DEFAULT '' NOT NULL,
	SUBLOT_ID			VARCHAR2(255)	DEFAULT '',
	SETUP_T				NUMBER(10)		DEFAULT 0 NOT NULL,
	START_T				NUMBER(10)		DEFAULT 0 NOT NULL,
	FINISH_T			NUMBER(10)		DEFAULT 0 NOT NULL,
	WEEK_NB				NUMBER(3)		DEFAULT 0 NOT NULL,
	YEAR				NUMBER(5)		DEFAULT 0 NOT NULL,
	STAT_NUM			NUMBER(3)		DEFAULT 0 NOT NULL,
	TESTER_NAME			VARCHAR2(255)	DEFAULT '',
	TESTER_TYPE			VARCHAR2(255)	DEFAULT '',
	FLAGS				CHAR(2)			DEFAULT NULL,
	NB_PARTS			NUMBER(8)		DEFAULT 0 NOT NULL,
	NB_PARTS_GOOD		NUMBER(8)		DEFAULT 0 NOT NULL,
	NB_PARTS_SAMPLES	NUMBER(8)		DEFAULT 0 NOT NULL,
	NB_PARTS_SAMPLES_GOOD NUMBER(8)		DEFAULT 0 NOT NULL,
	NB_PARTS_SUMMARY	NUMBER(8)		DEFAULT 0 NOT NULL,
	NB_PARTS_SUMMARY_GOOD NUMBER(8)		DEFAULT 0 NOT NULL,
	DATA_PROVIDER		VARCHAR2(255)	DEFAULT '',
	DATA_TYPE			VARCHAR2(255)	DEFAULT '',
	PROD_DATA			CHAR(1)			DEFAULT 'Y' NOT NULL,
	RETEST_INDEX		NUMBER(3)		DEFAULT 0 NOT NULL,
	RETEST_HBINS		VARCHAR2(255)	DEFAULT NULL,
	REWORK_CODE			NUMBER(3)		DEFAULT 0 NOT NULL,
	JOB_NAM				VARCHAR2(255)	DEFAULT NULL,
	JOB_REV				VARCHAR2(255)	DEFAULT NULL,
	OPER_NAM			VARCHAR2(255)	DEFAULT NULL,
	EXEC_TYP			VARCHAR2(255)	DEFAULT NULL,
	EXEC_VER			VARCHAR2(255)	DEFAULT NULL,
	TEST_COD			VARCHAR2(255)	DEFAULT NULL,
	FACIL_ID			VARCHAR2(255)	DEFAULT NULL,
	TST_TEMP			VARCHAR2(255)	DEFAULT NULL,
	MODE_COD			CHAR(1)			DEFAULT NULL,	
	RTST_COD			CHAR(1)			DEFAULT NULL,	
	PROT_COD			CHAR(1)			DEFAULT NULL,	
	BURN_TIM			NUMBER(5)		DEFAULT NULL,	
	CMOD_COD			CHAR(1)			DEFAULT NULL,	
	PART_TYP			VARCHAR2(256)	DEFAULT NULL,	
	USER_TXT			VARCHAR2(256)	DEFAULT NULL,	
	AUX_FILE			VARCHAR2(256)	DEFAULT NULL,	
	PKG_TYP				VARCHAR2(256)	DEFAULT NULL,
	FAMLY_ID			VARCHAR2(256)	DEFAULT NULL,	
	DATE_COD			VARCHAR2(256)	DEFAULT NULL,	
	FLOOR_ID			VARCHAR2(256)	DEFAULT NULL,	
	PROC_ID				VARCHAR2(256)	DEFAULT NULL,
	OPER_FRQ			VARCHAR2(256)	DEFAULT NULL,	
	SPEC_NAM			VARCHAR2(256)	DEFAULT NULL,	
	SPEC_VER			VARCHAR2(256)	DEFAULT NULL,
	FLOW_ID				VARCHAR2(256)	DEFAULT NULL,
	SETUP_ID			VARCHAR2(256)	DEFAULT NULL,
	DSGN_REV			VARCHAR2(256)	DEFAULT NULL,
	ENG_ID				VARCHAR2(256)	DEFAULT NULL,
	ROM_COD				VARCHAR2(256)	DEFAULT NULL,
	SERL_NUM			VARCHAR2(256)	DEFAULT NULL,
	SUPR_NAM			VARCHAR2(256)	DEFAULT NULL,
	NB_SITES			NUMBER(3)		DEFAULT 1 NOT NULL,
	HEAD_NUM			NUMBER(3)		DEFAULT NULL,
	HANDLER_TYP			VARCHAR2(255)	DEFAULT NULL,
	HANDLER_ID			VARCHAR2(255)	DEFAULT NULL,
	CARD_TYP			VARCHAR2(255)	DEFAULT NULL,
	CARD_ID				VARCHAR2(255)	DEFAULT NULL,
	LOADBOARD_TYP		VARCHAR2(255)	DEFAULT NULL,
	LOADBOARD_ID		VARCHAR2(255)	DEFAULT NULL,
	DIB_TYP				VARCHAR2(255)	DEFAULT NULL,
	DIB_ID				VARCHAR2(255)	DEFAULT NULL,
	CABLE_TYP			VARCHAR2(255)	DEFAULT NULL,
	CABLE_ID			VARCHAR2(255)	DEFAULT NULL,
	CONTACTOR_TYP		VARCHAR2(255)	DEFAULT NULL,
	CONTACTOR_ID		VARCHAR2(255)	DEFAULT NULL,
	LASER_TYP			VARCHAR2(255)	DEFAULT NULL,
	LASER_ID			VARCHAR2(255)	DEFAULT NULL,
	EXTRA_TYP			VARCHAR2(255)	DEFAULT NULL,
	EXTRA_ID			VARCHAR2(255)	DEFAULT NULL,
	FILE_HOST_ID		NUMBER(10)		DEFAULT 0,
	FILE_PATH			VARCHAR2(255)	DEFAULT '',
	FILE_NAME			VARCHAR2(255)	DEFAULT '',
	VALID_SPLITLOT		CHAR(1)			DEFAULT 'N' NOT NULL,
	INSERTION_TIME		NUMBER(10)		DEFAULT NULL,
	SUBCON_LOT_ID		VARCHAR2(255)	DEFAULT '',
	CONSTRAINT PK_WT_SPLITLOT PRIMARY KEY (SPLITLOT_ID)
)
PARTITION BY RANGE (SPLITLOT_ID) 
(PARTITION FIRSTPART VALUES LESS THAN (MAXVALUE) TABLESPACE &GEXADMIN._WT_D PCTFREE 5 PCTUSED 80 &LOGGINGMODE. COMPRESS);


CREATE TABLE &GEXADMIN..WT_WAFER_INFO (
	SPLITLOT_ID			NUMBER(10)		DEFAULT 0 NOT NULL,
	WAFER_ID			VARCHAR2(255)	DEFAULT NULL,
	FAB_ID				VARCHAR2(255)	DEFAULT NULL,
	FRAME_ID			VARCHAR2(255)	DEFAULT NULL,
	MASK_ID				VARCHAR2(255)	DEFAULT NULL,
	WAFER_SIZE			NUMBER			DEFAULT NULL,
	DIE_HT				NUMBER			DEFAULT NULL,
	DIE_WID				NUMBER			DEFAULT NULL,
	WAFER_UNITS			NUMBER(3)		DEFAULT NULL,
	WAFER_FLAT			CHAR(1)			DEFAULT NULL,
	CENTER_X			NUMBER(5)		DEFAULT NULL,
	CENTER_Y			NUMBER(5)		DEFAULT NULL,
	POS_X				CHAR(1)			DEFAULT NULL,
	POS_Y				CHAR(1)			DEFAULT NULL
)
PARTITION BY RANGE (SPLITLOT_ID) 
(PARTITION FIRSTPART VALUES LESS THAN (MAXVALUE) TABLESPACE &GEXADMIN._WT_D PCTFREE 5 PCTUSED 80 &LOGGINGMODE. COMPRESS);


CREATE TABLE &GEXADMIN..WT_PARTS_STATS_SAMPLES (
	SPLITLOT_ID			NUMBER(10)		DEFAULT 0 NOT NULL,
	SITE_NO				NUMBER(5)		DEFAULT 1 NOT NULL,
	NB_PARTS			NUMBER(8)		DEFAULT 0 NOT NULL,
	NB_PARTS_GOOD		NUMBER(8)		DEFAULT 0 NOT NULL
)
PARTITION BY RANGE (SPLITLOT_ID) 
(PARTITION FIRSTPART VALUES LESS THAN (MAXVALUE) TABLESPACE &GEXADMIN._WT_D PCTFREE 5 PCTUSED 80 &LOGGINGMODE. COMPRESS);


CREATE TABLE &GEXADMIN..WT_PARTS_STATS_SUMMARY (
	SPLITLOT_ID			NUMBER(10)		DEFAULT 0 NOT NULL,
	SITE_NO				NUMBER(5)		DEFAULT 1 NOT NULL,
	NB_PARTS			NUMBER(8)		DEFAULT 0 NOT NULL,
	NB_GOOD				NUMBER(8)		DEFAULT NULL,
	NB_RTST				NUMBER(8)		DEFAULT NULL
)
PARTITION BY RANGE (SPLITLOT_ID) 
(PARTITION FIRSTPART VALUES LESS THAN (MAXVALUE) TABLESPACE &GEXADMIN._WT_D PCTFREE 5 PCTUSED 80 &LOGGINGMODE. COMPRESS);

CREATE TABLE &GEXADMIN..WT_HBIN (
	SPLITLOT_ID			NUMBER(10)		DEFAULT 0 NOT NULL,
	HBIN_NO				NUMBER(5)		DEFAULT 0 NOT NULL,
	HBIN_NAME			VARCHAR2(255)	DEFAULT '',
	HBIN_CAT			CHAR(1)			DEFAULT NULL
)
PARTITION BY RANGE (SPLITLOT_ID) 
(PARTITION FIRSTPART VALUES LESS THAN (MAXVALUE) TABLESPACE &GEXADMIN._WT_S PCTFREE 5 PCTUSED 80 &LOGGINGMODE. COMPRESS);


CREATE TABLE &GEXADMIN..WT_HBIN_STATS_SAMPLES (
	SPLITLOT_ID			NUMBER(10)		DEFAULT 0 NOT NULL,
	SITE_NO				NUMBER(5)		DEFAULT 1 NOT NULL,
	HBIN_NO				NUMBER(5)		DEFAULT 0 NOT NULL,
	NB_PARTS			NUMBER(8)		DEFAULT 0 NOT NULL
)
PARTITION BY RANGE (SPLITLOT_ID) 
(PARTITION FIRSTPART VALUES LESS THAN (MAXVALUE) TABLESPACE &GEXADMIN._WT_S PCTFREE 5 PCTUSED 80 &LOGGINGMODE. COMPRESS);


CREATE TABLE &GEXADMIN..WT_HBIN_STATS_SUMMARY (
	SPLITLOT_ID			NUMBER(10)		DEFAULT 0 NOT NULL,
	SITE_NO				NUMBER(5)		DEFAULT 1 NOT NULL,
	HBIN_NO				NUMBER(5)		DEFAULT 0 NOT NULL,
	BIN_COUNT			NUMBER(8)		DEFAULT 0 NOT NULL
)
PARTITION BY RANGE (SPLITLOT_ID) 
(PARTITION FIRSTPART VALUES LESS THAN (MAXVALUE) TABLESPACE &GEXADMIN._WT_S PCTFREE 5 PCTUSED 80 &LOGGINGMODE. COMPRESS);


CREATE TABLE &GEXADMIN..WT_SBIN (
	SPLITLOT_ID			NUMBER(10)		DEFAULT 0 NOT NULL,
	SBIN_NO				NUMBER(5)		DEFAULT 0 NOT NULL,
	SBIN_NAME			VARCHAR2(255)	DEFAULT '',
	SBIN_CAT			CHAR(1)			DEFAULT NULL
)
PARTITION BY RANGE (SPLITLOT_ID) 
(PARTITION FIRSTPART VALUES LESS THAN (MAXVALUE) TABLESPACE &GEXADMIN._WT_S PCTFREE 5 PCTUSED 80 &LOGGINGMODE. COMPRESS);


CREATE TABLE &GEXADMIN..WT_SBIN_STATS_SAMPLES (
	SPLITLOT_ID			NUMBER(10)		DEFAULT 0 NOT NULL,
	SITE_NO				NUMBER(5)		DEFAULT 1 NOT NULL,
	SBIN_NO				NUMBER(5)		DEFAULT 0 NOT NULL,
	NB_PARTS			NUMBER(8)		DEFAULT 0 NOT NULL
)
PARTITION BY RANGE (SPLITLOT_ID) 
(PARTITION FIRSTPART VALUES LESS THAN (MAXVALUE) TABLESPACE &GEXADMIN._WT_S PCTFREE 5 PCTUSED 80 &LOGGINGMODE. COMPRESS);


CREATE TABLE &GEXADMIN..WT_SBIN_STATS_SUMMARY (
	SPLITLOT_ID			NUMBER(10)		DEFAULT 0 NOT NULL,
	SITE_NO				NUMBER(5)		DEFAULT 1 NOT NULL,
	SBIN_NO				NUMBER(5)		DEFAULT 0 NOT NULL,
	BIN_COUNT			NUMBER(8)		DEFAULT 0 NOT NULL
)
PARTITION BY RANGE (SPLITLOT_ID) 
(PARTITION FIRSTPART VALUES LESS THAN (MAXVALUE) TABLESPACE &GEXADMIN._WT_S PCTFREE 5 PCTUSED 80 &LOGGINGMODE. COMPRESS);


CREATE TABLE &GEXADMIN..WT_RUN (
	SPLITLOT_ID			NUMBER(10)		DEFAULT 0 NOT NULL,
	RUN_ID				NUMBER(5)		DEFAULT 0 NOT NULL,
	SITE_NO				NUMBER(5)		DEFAULT 1 NOT NULL,
	PART_ID				VARCHAR2(255)	DEFAULT NULL,
	PART_X				NUMBER(6)		DEFAULT NULL,
	PART_Y				NUMBER(6)		DEFAULT NULL,
	HBIN_NO				NUMBER(5)		DEFAULT 0 NOT NULL,
	SBIN_NO				NUMBER(5)		DEFAULT NULL,
	TTIME				NUMBER(10)		DEFAULT NULL,
	TESTS_EXECUTED		NUMBER(5)		DEFAULT 0 NOT NULL,
	TESTS_FAILED		NUMBER(5)		DEFAULT 0 NOT NULL,
	FIRSTFAIL_TNUM		NUMBER(10)		DEFAULT NULL,
	FIRSTFAIL_TNAME		VARCHAR2(255)	DEFAULT NULL,
	RETEST_INDEX		NUMBER(3)		DEFAULT 0 NOT NULL
)
PARTITION BY RANGE (SPLITLOT_ID) 
(PARTITION FIRSTPART VALUES LESS THAN (MAXVALUE) TABLESPACE &GEXADMIN._WT_R PCTFREE 5 PCTUSED 80 &LOGGINGMODE. COMPRESS);


CREATE TABLE &GEXADMIN..WT_PTEST_INFO (
	SPLITLOT_ID			NUMBER(10)		DEFAULT 0 NOT NULL,
	PTEST_INFO_ID		NUMBER(5)		DEFAULT 0 NOT NULL,
	TNUM				NUMBER(10)		DEFAULT 0 NOT NULL,
	TNAME				VARCHAR2(255)	DEFAULT '',
	UNITS				VARCHAR2(255)	DEFAULT '',
	FLAGS				CHAR(1)			DEFAULT NULL,
	LL					NUMBER			DEFAULT NULL,
	HL					NUMBER			DEFAULT NULL,
	TESTSEQ				NUMBER(5)		DEFAULT NULL
)
PARTITION BY RANGE (SPLITLOT_ID) 
(PARTITION FIRSTPART VALUES LESS THAN (MAXVALUE) TABLESPACE &GEXADMIN._WT_S PCTFREE 5 PCTUSED 80 &LOGGINGMODE. COMPRESS);


CREATE TABLE &GEXADMIN..WT_PTEST_LIMITS (
	SPLITLOT_ID			NUMBER(10)		DEFAULT 0 NOT NULL,
	PTEST_INFO_ID		NUMBER(5)		DEFAULT 0 NOT NULL,
	SITE_NO				NUMBER(5)		DEFAULT 1 NOT NULL,
	LL					NUMBER			DEFAULT 0 NOT NULL,
	HL					NUMBER			DEFAULT 0 NOT NULL
)
PARTITION BY RANGE (SPLITLOT_ID) 
(PARTITION FIRSTPART VALUES LESS THAN (MAXVALUE) TABLESPACE &GEXADMIN._WT_S PCTFREE 5 PCTUSED 80 &LOGGINGMODE. COMPRESS);


CREATE TABLE &GEXADMIN..WT_PTEST_RESULTS (
	SPLITLOT_ID			NUMBER(10)		DEFAULT 0 NOT NULL,
	PTEST_INFO_ID		NUMBER(5)		DEFAULT 0 NOT NULL,
	RUN_ID				NUMBER(5)		DEFAULT 0 NOT NULL,
	FLAGS				CHAR(1)			DEFAULT NULL,
	VALUE				NUMBER			DEFAULT NULL
)
PARTITION BY RANGE (SPLITLOT_ID) 
(PARTITION FIRSTPART VALUES LESS THAN (MAXVALUE) TABLESPACE &GEXADMIN._WT_R PCTFREE 5 PCTUSED 80 &LOGGINGMODE. COMPRESS);


CREATE TABLE &GEXADMIN..WT_PTEST_STATS_SAMPLES (
	SPLITLOT_ID			NUMBER(10)		DEFAULT 0 NOT NULL,
	PTEST_INFO_ID		NUMBER(5)		DEFAULT 0 NOT NULL,
	SITE_NO				NUMBER(5)		DEFAULT 1 NOT NULL,
	EXEC_COUNT			NUMBER(8)		DEFAULT 0 NOT NULL,
	FAIL_COUNT			NUMBER(8)		DEFAULT NULL,
	MIN_VALUE			NUMBER			DEFAULT NULL,
	MAX_VALUE			NUMBER			DEFAULT NULL,
	SUM					NUMBER			DEFAULT NULL,
	SQUARE_SUM			NUMBER			DEFAULT NULL
)
PARTITION BY RANGE (SPLITLOT_ID) 
(PARTITION FIRSTPART VALUES LESS THAN (MAXVALUE) TABLESPACE &GEXADMIN._WT_S PCTFREE 5 PCTUSED 80 &LOGGINGMODE. COMPRESS);


CREATE TABLE &GEXADMIN..WT_PTEST_STATS_SUMMARY (
	SPLITLOT_ID			NUMBER(10)		DEFAULT 0 NOT NULL,
	PTEST_INFO_ID		NUMBER(5)		DEFAULT 0 NOT NULL,
	SITE_NO				NUMBER(5)		DEFAULT 1 NOT NULL,
	EXEC_COUNT			NUMBER(8)		DEFAULT NULL,
	FAIL_COUNT			NUMBER(8)		DEFAULT NULL,
	MIN_VALUE			NUMBER			DEFAULT NULL,
	MAX_VALUE			NUMBER			DEFAULT NULL,
	SUM					NUMBER			DEFAULT NULL,
	SQUARE_SUM			NUMBER			DEFAULT NULL,
	TTIME				NUMBER(10)		DEFAULT NULL
)
PARTITION BY RANGE (SPLITLOT_ID) 
(PARTITION FIRSTPART VALUES LESS THAN (MAXVALUE) TABLESPACE &GEXADMIN._WT_S PCTFREE 5 PCTUSED 80 &LOGGINGMODE. COMPRESS);


CREATE TABLE &GEXADMIN..WT_MPTEST_INFO (
	SPLITLOT_ID			NUMBER(10)		DEFAULT 0 NOT NULL,
	MPTEST_INFO_ID		NUMBER(5)		DEFAULT 0 NOT NULL,
	TNUM				NUMBER(10)		DEFAULT 0 NOT NULL,
	TNAME				VARCHAR2(255)	DEFAULT '',
	TPIN				NUMBER(6)		DEFAULT 0 NOT NULL,
	UNITS				VARCHAR2(255)	DEFAULT '',
	FLAGS				CHAR(1)			DEFAULT NULL,
	LL					NUMBER			DEFAULT NULL,
	HL					NUMBER			DEFAULT NULL,
	TESTSEQ				NUMBER(5)		DEFAULT NULL
)
PARTITION BY RANGE (SPLITLOT_ID) 
(PARTITION FIRSTPART VALUES LESS THAN (MAXVALUE) TABLESPACE &GEXADMIN._WT_S PCTFREE 5 PCTUSED 80 &LOGGINGMODE. COMPRESS);


CREATE TABLE &GEXADMIN..WT_MPTEST_LIMITS (
	SPLITLOT_ID			NUMBER(10)		DEFAULT 0 NOT NULL,
	MPTEST_INFO_ID		NUMBER(5)		DEFAULT 0 NOT NULL,
	SITE_NO				NUMBER(5)		DEFAULT 1 NOT NULL,
	LL					NUMBER			DEFAULT 0 NOT NULL,
	HL					NUMBER			DEFAULT 0 NOT NULL
)
PARTITION BY RANGE (SPLITLOT_ID) 
(PARTITION FIRSTPART VALUES LESS THAN (MAXVALUE) TABLESPACE &GEXADMIN._WT_S PCTFREE 5 PCTUSED 80 &LOGGINGMODE. COMPRESS);


CREATE TABLE &GEXADMIN..WT_MPTEST_RESULTS (
	SPLITLOT_ID			NUMBER(10)		DEFAULT 0 NOT NULL,
	MPTEST_INFO_ID		NUMBER(5)		DEFAULT 0 NOT NULL,
	RUN_ID				NUMBER(5)		DEFAULT 0 NOT NULL,
	FLAGS				CHAR(1)			DEFAULT NULL,
	VALUE				NUMBER			DEFAULT 0 NOT NULL
)
PARTITION BY RANGE (SPLITLOT_ID) 
(PARTITION FIRSTPART VALUES LESS THAN (MAXVALUE) TABLESPACE &GEXADMIN._WT_R PCTFREE 5 PCTUSED 80 &LOGGINGMODE. COMPRESS);


CREATE TABLE &GEXADMIN..WT_MPTEST_STATS_SAMPLES (
	SPLITLOT_ID			NUMBER(10)		DEFAULT 0 NOT NULL,
	MPTEST_INFO_ID		NUMBER(5)		DEFAULT 0 NOT NULL,
	SITE_NO				NUMBER(5)		DEFAULT 1 NOT NULL,
	EXEC_COUNT			NUMBER(8)		DEFAULT 0 NOT NULL,
	FAIL_COUNT			NUMBER(8)		DEFAULT NULL,
	MIN_VALUE			NUMBER			DEFAULT NULL,
	MAX_VALUE			NUMBER			DEFAULT NULL,
	SUM					NUMBER			DEFAULT NULL,
	SQUARE_SUM			NUMBER			DEFAULT NULL
)
PARTITION BY RANGE (SPLITLOT_ID) 
(PARTITION FIRSTPART VALUES LESS THAN (MAXVALUE) TABLESPACE &GEXADMIN._WT_S PCTFREE 5 PCTUSED 80 &LOGGINGMODE. COMPRESS);


CREATE TABLE &GEXADMIN..WT_MPTEST_STATS_SUMMARY (
	SPLITLOT_ID			NUMBER(10)		DEFAULT 0 NOT NULL,
	MPTEST_INFO_ID		NUMBER(5)		DEFAULT 0 NOT NULL,
	SITE_NO				NUMBER(5)		DEFAULT 1 NOT NULL,
	EXEC_COUNT			NUMBER(8)		DEFAULT 0 NOT NULL,
	FAIL_COUNT			NUMBER(8)		DEFAULT 0 NOT NULL,
	MIN_VALUE			NUMBER			DEFAULT NULL,
	MAX_VALUE			NUMBER			DEFAULT NULL,
	SUM					NUMBER			DEFAULT NULL,
	SQUARE_SUM			NUMBER			DEFAULT NULL,
	TTIME				NUMBER(10)		DEFAULT NULL
)
PARTITION BY RANGE (SPLITLOT_ID) 
(PARTITION FIRSTPART VALUES LESS THAN (MAXVALUE) TABLESPACE &GEXADMIN._WT_S PCTFREE 5 PCTUSED 80 &LOGGINGMODE. COMPRESS);


CREATE TABLE &GEXADMIN..WT_FTEST_INFO (
	SPLITLOT_ID			NUMBER(10)		DEFAULT 0 NOT NULL,
	FTEST_INFO_ID		NUMBER(5)		DEFAULT 0 NOT NULL,
	TNUM				NUMBER(10)		DEFAULT 0 NOT NULL,
	TNAME				VARCHAR2(255)	DEFAULT '',
	TESTSEQ				NUMBER(5)		DEFAULT NULL
)
PARTITION BY RANGE (SPLITLOT_ID) 
(PARTITION FIRSTPART VALUES LESS THAN (MAXVALUE) TABLESPACE &GEXADMIN._WT_S PCTFREE 5 PCTUSED 80 &LOGGINGMODE. COMPRESS);


CREATE TABLE &GEXADMIN..WT_FTEST_RESULTS (
	SPLITLOT_ID			NUMBER(10)		DEFAULT 0 NOT NULL,
	FTEST_INFO_ID		NUMBER(5)		NOT NULL,
	RUN_ID				NUMBER(5)		DEFAULT 0 NOT NULL,
	FLAGS				CHAR(1)			DEFAULT NULL,
	VECT_NAM			VARCHAR2(255)	DEFAULT '',
	VECT_OFF			NUMBER(6)		DEFAULT NULL
)
PARTITION BY RANGE (SPLITLOT_ID) 
(PARTITION FIRSTPART VALUES LESS THAN (MAXVALUE) TABLESPACE &GEXADMIN._WT_R PCTFREE 5 PCTUSED 80 &LOGGINGMODE. COMPRESS);


CREATE TABLE &GEXADMIN..WT_FTEST_STATS_SAMPLES (
	SPLITLOT_ID			NUMBER(10)		DEFAULT 0 NOT NULL,
	FTEST_INFO_ID		NUMBER(5)		DEFAULT 0 NOT NULL,
	SITE_NO				NUMBER(5)		DEFAULT 1 NOT NULL,
	EXEC_COUNT			NUMBER(8)		DEFAULT 0 NOT NULL,
	FAIL_COUNT			NUMBER(8)		DEFAULT NULL
)
PARTITION BY RANGE (SPLITLOT_ID) 
(PARTITION FIRSTPART VALUES LESS THAN (MAXVALUE) TABLESPACE &GEXADMIN._WT_S PCTFREE 5 PCTUSED 80 &LOGGINGMODE. COMPRESS);


CREATE TABLE &GEXADMIN..WT_FTEST_STATS_SUMMARY (
	SPLITLOT_ID			NUMBER(10)		DEFAULT 0 NOT NULL,
	FTEST_INFO_ID		NUMBER(5)		DEFAULT 0 NOT NULL,
	SITE_NO				NUMBER(5)		DEFAULT 1 NOT NULL,
	EXEC_COUNT			NUMBER(8)		DEFAULT NULL,
	FAIL_COUNT			NUMBER(8)		DEFAULT NULL,
	TTIME				NUMBER(10)		DEFAULT NULL
)
PARTITION BY RANGE (SPLITLOT_ID) 
(PARTITION FIRSTPART VALUES LESS THAN (MAXVALUE) TABLESPACE &GEXADMIN._WT_S PCTFREE 5 PCTUSED 80 &LOGGINGMODE. COMPRESS);


CREATE INDEX &GEXADMIN..WT_PTEST_RESULTS 
		ON &GEXADMIN..WT_PTEST_RESULTS	(SPLITLOT_ID, 
		PTEST_INFO_ID) LOCAL COMPRESS;
		

CREATE INDEX &GEXADMIN..WT_MPTEST_RESULTS 
		ON &GEXADMIN..WT_MPTEST_RESULTS	(SPLITLOT_ID, 
		MPTEST_INFO_ID) LOCAL COMPRESS;
		

CREATE INDEX &GEXADMIN..WT_FTEST_RESULTS 
		ON &GEXADMIN..WT_FTEST_RESULTS	(SPLITLOT_ID, 
		FTEST_INFO_ID) LOCAL COMPRESS;

--
-- FINAL TEST
--


CREATE TABLE &GEXADMIN..FT_LOT (
	LOT_ID				VARCHAR2(255)	DEFAULT '' NOT NULL,
	TRACKING_LOT_ID		VARCHAR2(255)	DEFAULT NULL,
	PRODUCT_NAME		VARCHAR2(255)	DEFAULT NULL,
	NB_PARTS			NUMBER(8)		DEFAULT 0 NOT NULL,
	NB_PARTS_GOOD		NUMBER(8)		DEFAULT 0 NOT NULL
) TABLESPACE &GEXADMIN._FT PCTFREE 5 PCTUSED 80 &LOGGINGMODE. COMPRESS;


CREATE TABLE &GEXADMIN..FT_SPLITLOT (
	SPLITLOT_ID			NUMBER(10)		NOT NULL,
	LOT_ID				VARCHAR2(255)	DEFAULT '' NOT NULL,
	SUBLOT_ID			VARCHAR2(255)	DEFAULT '',
	SETUP_T				NUMBER(10)		DEFAULT 0 NOT NULL,
	START_T				NUMBER(10)		DEFAULT 0 NOT NULL,
	FINISH_T			NUMBER(10)		DEFAULT 0 NOT NULL,
	WEEK_NB				NUMBER(3)		DEFAULT 0 NOT NULL,
	YEAR				NUMBER(5)		DEFAULT 0 NOT NULL,
	STAT_NUM			NUMBER(3)		DEFAULT 0 NOT NULL,
	TESTER_NAME			VARCHAR2(255)	DEFAULT '',
	TESTER_TYPE			VARCHAR2(255)	DEFAULT '',
	FLAGS				CHAR(2)			DEFAULT NULL,
	NB_PARTS			NUMBER(8)		DEFAULT 0 NOT NULL,
	NB_PARTS_GOOD		NUMBER(8)		DEFAULT 0 NOT NULL,
	NB_PARTS_SAMPLES	NUMBER(8)		DEFAULT 0 NOT NULL,
	NB_PARTS_SAMPLES_GOOD NUMBER(8)		DEFAULT 0 NOT NULL,
	NB_PARTS_SUMMARY	NUMBER(8)		DEFAULT 0 NOT NULL,
	NB_PARTS_SUMMARY_GOOD NUMBER(8)		DEFAULT 0 NOT NULL,
	DATA_PROVIDER		VARCHAR2(255)	DEFAULT '',
	DATA_TYPE			VARCHAR2(255)	DEFAULT '',
	PROD_DATA			CHAR(1)			DEFAULT 'Y' NOT NULL,
	RETEST_INDEX		NUMBER(3)		DEFAULT 0 NOT NULL,
	RETEST_HBINS		VARCHAR2(255)	DEFAULT NULL,
	REWORK_CODE			NUMBER(3)		DEFAULT 0 NOT NULL,
	JOB_NAM				VARCHAR2(255)	DEFAULT NULL,
	JOB_REV				VARCHAR2(255)	DEFAULT NULL,
	OPER_NAM			VARCHAR2(255)	DEFAULT NULL,
	EXEC_TYP			VARCHAR2(255)	DEFAULT NULL,
	EXEC_VER			VARCHAR2(255)	DEFAULT NULL,
	TEST_COD			VARCHAR2(255)	DEFAULT NULL,
	FACIL_ID			VARCHAR2(255)	DEFAULT NULL,
	TST_TEMP			VARCHAR2(255)	DEFAULT NULL,
	MODE_COD			CHAR(1)			DEFAULT NULL,	
	RTST_COD			CHAR(1)			DEFAULT NULL,	
	PROT_COD			CHAR(1)			DEFAULT NULL,	
	BURN_TIM			NUMBER(5)		DEFAULT NULL,	
	CMOD_COD			CHAR(1)			DEFAULT NULL,	
	PART_TYP			VARCHAR2(256)	DEFAULT NULL,	
	USER_TXT			VARCHAR2(256)	DEFAULT NULL,	
	AUX_FILE			VARCHAR2(256)	DEFAULT NULL,	
	PKG_TYP				VARCHAR2(256)	DEFAULT NULL,
	FAMLY_ID			VARCHAR2(256)	DEFAULT NULL,	
	DATE_COD			VARCHAR2(256)	DEFAULT NULL,	
	FLOOR_ID			VARCHAR2(256)	DEFAULT NULL,	
	PROC_ID				VARCHAR2(256)	DEFAULT NULL,
	OPER_FRQ			VARCHAR2(256)	DEFAULT NULL,	
	SPEC_NAM			VARCHAR2(256)	DEFAULT NULL,	
	SPEC_VER			VARCHAR2(256)	DEFAULT NULL,
	FLOW_ID				VARCHAR2(256)	DEFAULT NULL,
	SETUP_ID			VARCHAR2(256)	DEFAULT NULL,
	DSGN_REV			VARCHAR2(256)	DEFAULT NULL,
	ENG_ID				VARCHAR2(256)	DEFAULT NULL,
	ROM_COD				VARCHAR2(256)	DEFAULT NULL,
	SERL_NUM			VARCHAR2(256)	DEFAULT NULL,
	SUPR_NAM			VARCHAR2(256)	DEFAULT NULL,
	NB_SITES			NUMBER(3)		DEFAULT 1 NOT NULL,
	HEAD_NUM			NUMBER(3)		DEFAULT NULL,
	HANDLER_TYP			VARCHAR2(255)	DEFAULT NULL,
	HANDLER_ID			VARCHAR2(255)	DEFAULT NULL,
	CARD_TYP			VARCHAR2(255)	DEFAULT NULL,
	CARD_ID				VARCHAR2(255)	DEFAULT NULL,
	LOADBOARD_TYP		VARCHAR2(255)	DEFAULT NULL,
	LOADBOARD_ID		VARCHAR2(255)	DEFAULT NULL,
	DIB_TYP				VARCHAR2(255)	DEFAULT NULL,
	DIB_ID				VARCHAR2(255)	DEFAULT NULL,
	CABLE_TYP			VARCHAR2(255)	DEFAULT NULL,
	CABLE_ID			VARCHAR2(255)	DEFAULT NULL,
	CONTACTOR_TYP		VARCHAR2(255)	DEFAULT NULL,
	CONTACTOR_ID		VARCHAR2(255)	DEFAULT NULL,
	LASER_TYP			VARCHAR2(255)	DEFAULT NULL,
	LASER_ID			VARCHAR2(255)	DEFAULT NULL,
	EXTRA_TYP			VARCHAR2(255)	DEFAULT NULL,
	EXTRA_ID			VARCHAR2(255)	DEFAULT NULL,
	FILE_HOST_ID		NUMBER(10)		DEFAULT 0,
	FILE_PATH			VARCHAR2(255)	DEFAULT '',
	FILE_NAME			VARCHAR2(255)	DEFAULT '',
	VALID_SPLITLOT		CHAR(1)			DEFAULT 'N' NOT NULL,
	INSERTION_TIME		NUMBER(10)		DEFAULT NULL,
	SUBCON_LOT_ID		VARCHAR2(255)	DEFAULT '',
	CONSTRAINT PK_FT_SPLITLOT PRIMARY KEY (SPLITLOT_ID)
)
PARTITION BY RANGE (SPLITLOT_ID) 
(PARTITION FIRSTPART VALUES LESS THAN (MAXVALUE) TABLESPACE &GEXADMIN._FT_D PCTFREE 5 PCTUSED 80 &LOGGINGMODE. COMPRESS);


CREATE TABLE &GEXADMIN..FT_PARTS_STATS_SAMPLES (
	SPLITLOT_ID			NUMBER(10)		DEFAULT 0 NOT NULL,
	SITE_NO				NUMBER(5)		DEFAULT 1 NOT NULL,
	NB_PARTS			NUMBER(8)		DEFAULT 0 NOT NULL,
	NB_PARTS_GOOD		NUMBER(8)		DEFAULT 0 NOT NULL
)
PARTITION BY RANGE (SPLITLOT_ID) 
(PARTITION FIRSTPART VALUES LESS THAN (MAXVALUE) TABLESPACE &GEXADMIN._FT_D PCTFREE 5 PCTUSED 80 &LOGGINGMODE. COMPRESS);


CREATE TABLE &GEXADMIN..FT_PARTS_STATS_SUMMARY (
	SPLITLOT_ID			NUMBER(10)		DEFAULT 0 NOT NULL,
	SITE_NO				NUMBER(5)		DEFAULT 1 NOT NULL,
	NB_PARTS			NUMBER(8)		DEFAULT 0 NOT NULL,
	NB_GOOD				NUMBER(8)		DEFAULT NULL,
	NB_RTST				NUMBER(8)		DEFAULT NULL
)
PARTITION BY RANGE (SPLITLOT_ID) 
(PARTITION FIRSTPART VALUES LESS THAN (MAXVALUE) TABLESPACE &GEXADMIN._FT_D PCTFREE 5 PCTUSED 80 &LOGGINGMODE. COMPRESS);


CREATE TABLE &GEXADMIN..FT_HBIN (
	SPLITLOT_ID			NUMBER(10)		DEFAULT 0 NOT NULL,
	HBIN_NO				NUMBER(5)		DEFAULT 0 NOT NULL,
	HBIN_NAME			VARCHAR2(255)	DEFAULT '',
	HBIN_CAT			CHAR(1)			DEFAULT NULL
)
PARTITION BY RANGE (SPLITLOT_ID) 
(PARTITION FIRSTPART VALUES LESS THAN (MAXVALUE) TABLESPACE &GEXADMIN._FT_S PCTFREE 5 PCTUSED 80 &LOGGINGMODE. COMPRESS);


CREATE TABLE &GEXADMIN..FT_HBIN_STATS_SAMPLES (
	SPLITLOT_ID			NUMBER(10)		DEFAULT 0 NOT NULL,
	SITE_NO				NUMBER(5)		DEFAULT 1 NOT NULL,
	HBIN_NO				NUMBER(5)		DEFAULT 0 NOT NULL,
	NB_PARTS			NUMBER(8)		DEFAULT 0 NOT NULL
)
PARTITION BY RANGE (SPLITLOT_ID) 
(PARTITION FIRSTPART VALUES LESS THAN (MAXVALUE) TABLESPACE &GEXADMIN._FT_S PCTFREE 5 PCTUSED 80 &LOGGINGMODE. COMPRESS);


CREATE TABLE &GEXADMIN..FT_HBIN_STATS_SUMMARY (
	SPLITLOT_ID			NUMBER(10)		DEFAULT 0 NOT NULL,
	SITE_NO				NUMBER(5)		DEFAULT 1 NOT NULL,
	HBIN_NO				NUMBER(5)		DEFAULT 0 NOT NULL,
	BIN_COUNT			NUMBER(8)		DEFAULT 0 NOT NULL
)
PARTITION BY RANGE (SPLITLOT_ID) 
(PARTITION FIRSTPART VALUES LESS THAN (MAXVALUE) TABLESPACE &GEXADMIN._FT_S PCTFREE 5 PCTUSED 80 &LOGGINGMODE. COMPRESS);


CREATE TABLE &GEXADMIN..FT_SBIN (
	SPLITLOT_ID			NUMBER(10)		DEFAULT 0 NOT NULL,
	SBIN_NO				NUMBER(5)		DEFAULT 0 NOT NULL,
	SBIN_NAME			VARCHAR2(255)	DEFAULT '',
	SBIN_CAT			CHAR(1)			DEFAULT NULL
)
PARTITION BY RANGE (SPLITLOT_ID) 
(PARTITION FIRSTPART VALUES LESS THAN (MAXVALUE) TABLESPACE &GEXADMIN._FT_S PCTFREE 5 PCTUSED 80 &LOGGINGMODE. COMPRESS);


CREATE TABLE &GEXADMIN..FT_SBIN_STATS_SAMPLES (
	SPLITLOT_ID			NUMBER(10)		DEFAULT 0 NOT NULL,
	SITE_NO				NUMBER(5)		DEFAULT 1 NOT NULL,
	SBIN_NO				NUMBER(5)		DEFAULT 0 NOT NULL,
	NB_PARTS			NUMBER(8)		DEFAULT 0 NOT NULL
)
PARTITION BY RANGE (SPLITLOT_ID) 
(PARTITION FIRSTPART VALUES LESS THAN (MAXVALUE) TABLESPACE &GEXADMIN._FT_S PCTFREE 5 PCTUSED 80 &LOGGINGMODE. COMPRESS);


CREATE TABLE &GEXADMIN..FT_SBIN_STATS_SUMMARY (
	SPLITLOT_ID			NUMBER(10)		DEFAULT 0 NOT NULL,
	SITE_NO				NUMBER(5)		DEFAULT 1 NOT NULL,
	SBIN_NO				NUMBER(5)		DEFAULT 0 NOT NULL,
	BIN_COUNT			NUMBER(8)		DEFAULT 0 NOT NULL
)
PARTITION BY RANGE (SPLITLOT_ID) 
(PARTITION FIRSTPART VALUES LESS THAN (MAXVALUE) TABLESPACE &GEXADMIN._FT_S PCTFREE 5 PCTUSED 80 &LOGGINGMODE. COMPRESS);


CREATE TABLE &GEXADMIN..FT_RUN (
	SPLITLOT_ID			NUMBER(10)		DEFAULT 0 NOT NULL,
	RUN_ID				NUMBER(8)		DEFAULT 0 NOT NULL,
	SITE_NO				NUMBER(5)		DEFAULT 1 NOT NULL,
	PART_ID				VARCHAR2(255)	DEFAULT NULL,
	PART_X				NUMBER(6)		DEFAULT NULL,
	PART_Y				NUMBER(6)		DEFAULT NULL,
	HBIN_NO				NUMBER(5)		DEFAULT 0 NOT NULL,
	SBIN_NO				NUMBER(5)		DEFAULT NULL,
	TTIME				NUMBER(10)		DEFAULT NULL,
	TESTS_EXECUTED		NUMBER(5)		DEFAULT 0 NOT NULL,
	TESTS_FAILED		NUMBER(5)		DEFAULT 0 NOT NULL,
	FIRSTFAIL_TNUM		NUMBER(10)		DEFAULT NULL,
	FIRSTFAIL_TNAME		VARCHAR2(255)	DEFAULT NULL,
	RETEST_INDEX		NUMBER(3)		DEFAULT 0 NOT NULL
)
PARTITION BY RANGE (SPLITLOT_ID) 
(PARTITION FIRSTPART VALUES LESS THAN (MAXVALUE) TABLESPACE &GEXADMIN._FT_R PCTFREE 5 PCTUSED 80 &LOGGINGMODE. COMPRESS);


CREATE TABLE &GEXADMIN..FT_PTEST_INFO (
	SPLITLOT_ID			NUMBER(10)		DEFAULT 0 NOT NULL,
	PTEST_INFO_ID		NUMBER(5)		DEFAULT 0 NOT NULL,
	TNUM				NUMBER(10)		DEFAULT 0 NOT NULL,
	TNAME				VARCHAR2(255)	DEFAULT '',
	UNITS				VARCHAR2(255)	DEFAULT '',
	FLAGS				CHAR(1)			DEFAULT NULL,
	LL					NUMBER			DEFAULT NULL,
	HL					NUMBER			DEFAULT NULL,
	TESTSEQ				NUMBER(5)		DEFAULT NULL
)
PARTITION BY RANGE (SPLITLOT_ID) 
(PARTITION FIRSTPART VALUES LESS THAN (MAXVALUE) TABLESPACE &GEXADMIN._FT_S PCTFREE 5 PCTUSED 80 &LOGGINGMODE. COMPRESS);


CREATE TABLE &GEXADMIN..FT_PTEST_LIMITS (
	SPLITLOT_ID			NUMBER(10)		DEFAULT 0 NOT NULL,
	PTEST_INFO_ID		NUMBER(5)		DEFAULT 0 NOT NULL,
	SITE_NO				NUMBER(5)		DEFAULT 1 NOT NULL,
	LL					NUMBER			DEFAULT 0 NOT NULL,
	HL					NUMBER			DEFAULT 0 NOT NULL
)
PARTITION BY RANGE (SPLITLOT_ID) 
(PARTITION FIRSTPART VALUES LESS THAN (MAXVALUE) TABLESPACE &GEXADMIN._FT_S PCTFREE 5 PCTUSED 80 &LOGGINGMODE. COMPRESS);


CREATE TABLE &GEXADMIN..FT_PTEST_RESULTS (
	SPLITLOT_ID			NUMBER(10)		DEFAULT 0 NOT NULL,
	PTEST_INFO_ID		NUMBER(5)		DEFAULT 0 NOT NULL,
	RUN_ID				NUMBER(8)		DEFAULT 0 NOT NULL,
	FLAGS				CHAR(1)			DEFAULT NULL,
	VALUE				NUMBER			DEFAULT NULL
)
PARTITION BY RANGE (SPLITLOT_ID) 
(PARTITION FIRSTPART VALUES LESS THAN (MAXVALUE) TABLESPACE &GEXADMIN._FT_R PCTFREE 5 PCTUSED 80 &LOGGINGMODE. COMPRESS);


CREATE TABLE &GEXADMIN..FT_PTEST_STATS_SAMPLES (
	SPLITLOT_ID			NUMBER(10)		DEFAULT 0 NOT NULL,
	PTEST_INFO_ID		NUMBER(5)		DEFAULT 0 NOT NULL,
	SITE_NO				NUMBER(5)		DEFAULT 1 NOT NULL,
	EXEC_COUNT			NUMBER(8)		DEFAULT 0 NOT NULL,
	FAIL_COUNT			NUMBER(8)		DEFAULT NULL,
	MIN_VALUE			NUMBER			DEFAULT NULL,
	MAX_VALUE			NUMBER			DEFAULT NULL,
	SUM					NUMBER			DEFAULT NULL,
	SQUARE_SUM			NUMBER			DEFAULT NULL
)
PARTITION BY RANGE (SPLITLOT_ID) 
(PARTITION FIRSTPART VALUES LESS THAN (MAXVALUE) TABLESPACE &GEXADMIN._FT_S PCTFREE 5 PCTUSED 80 &LOGGINGMODE. COMPRESS);


CREATE TABLE &GEXADMIN..FT_PTEST_STATS_SUMMARY (
	SPLITLOT_ID			NUMBER(10)		DEFAULT 0 NOT NULL,
	PTEST_INFO_ID		NUMBER(5)		DEFAULT 0 NOT NULL,
	SITE_NO				NUMBER(5)		DEFAULT 1 NOT NULL,
	EXEC_COUNT			NUMBER(8)		DEFAULT NULL,
	FAIL_COUNT			NUMBER(8)		DEFAULT NULL,
	MIN_VALUE			NUMBER			DEFAULT NULL,
	MAX_VALUE			NUMBER			DEFAULT NULL,
	SUM					NUMBER			DEFAULT NULL,
	SQUARE_SUM			NUMBER			DEFAULT NULL,
	TTIME				NUMBER(10)		DEFAULT NULL
)
PARTITION BY RANGE (SPLITLOT_ID) 
(PARTITION FIRSTPART VALUES LESS THAN (MAXVALUE) TABLESPACE &GEXADMIN._FT_S PCTFREE 5 PCTUSED 80 &LOGGINGMODE. COMPRESS);


CREATE TABLE &GEXADMIN..FT_MPTEST_INFO (
	SPLITLOT_ID			NUMBER(10)		DEFAULT 0 NOT NULL,
	MPTEST_INFO_ID		NUMBER(5)		DEFAULT 0 NOT NULL,
	TNUM				NUMBER(10)		DEFAULT 0 NOT NULL,
	TNAME				VARCHAR2(255)	DEFAULT '',
	TPIN				NUMBER(6)		DEFAULT 0 NOT NULL,
	UNITS				VARCHAR2(255)	DEFAULT '',
	FLAGS				CHAR(1)			DEFAULT NULL,
	LL					NUMBER			DEFAULT NULL,
	HL					NUMBER			DEFAULT NULL,
	TESTSEQ				NUMBER(5)		DEFAULT NULL
)
PARTITION BY RANGE (SPLITLOT_ID) 
(PARTITION FIRSTPART VALUES LESS THAN (MAXVALUE) TABLESPACE &GEXADMIN._FT_S PCTFREE 5 PCTUSED 80 &LOGGINGMODE. COMPRESS);


CREATE TABLE &GEXADMIN..FT_MPTEST_LIMITS (
	SPLITLOT_ID			NUMBER(10)		DEFAULT 0 NOT NULL,
	MPTEST_INFO_ID		NUMBER(5)		DEFAULT 0 NOT NULL,
	SITE_NO				NUMBER(5)		DEFAULT 1 NOT NULL,
	LL					NUMBER			DEFAULT 0 NOT NULL,
	HL					NUMBER			DEFAULT 0 NOT NULL
)
PARTITION BY RANGE (SPLITLOT_ID) 
(PARTITION FIRSTPART VALUES LESS THAN (MAXVALUE) TABLESPACE &GEXADMIN._FT_S PCTFREE 5 PCTUSED 80 &LOGGINGMODE. COMPRESS);


CREATE TABLE &GEXADMIN..FT_MPTEST_RESULTS (
	SPLITLOT_ID			NUMBER(10)		DEFAULT 0 NOT NULL,
	MPTEST_INFO_ID		NUMBER(5)		DEFAULT 0 NOT NULL,
	RUN_ID				NUMBER(8)		DEFAULT 0 NOT NULL,
	FLAGS				CHAR(1)			DEFAULT NULL,
	VALUE				NUMBER			DEFAULT 0 NOT NULL
)
PARTITION BY RANGE (SPLITLOT_ID) 
(PARTITION FIRSTPART VALUES LESS THAN (MAXVALUE) TABLESPACE &GEXADMIN._FT_R PCTFREE 5 PCTUSED 80 &LOGGINGMODE. COMPRESS);


CREATE TABLE &GEXADMIN..FT_MPTEST_STATS_SAMPLES (
	SPLITLOT_ID			NUMBER(10)		DEFAULT 0 NOT NULL,
	MPTEST_INFO_ID		NUMBER(5)		DEFAULT 0 NOT NULL,
	SITE_NO				NUMBER(5)		DEFAULT 1 NOT NULL,
	EXEC_COUNT			NUMBER(8)		DEFAULT 0 NOT NULL,
	FAIL_COUNT			NUMBER(8)		DEFAULT NULL,
	MIN_VALUE			NUMBER			DEFAULT NULL,
	MAX_VALUE			NUMBER			DEFAULT NULL,
	SUM					NUMBER			DEFAULT NULL,
	SQUARE_SUM			NUMBER			DEFAULT NULL
)
PARTITION BY RANGE (SPLITLOT_ID) 
(PARTITION FIRSTPART VALUES LESS THAN (MAXVALUE) TABLESPACE &GEXADMIN._FT_S PCTFREE 5 PCTUSED 80 &LOGGINGMODE. COMPRESS);


CREATE TABLE &GEXADMIN..FT_MPTEST_STATS_SUMMARY (
	SPLITLOT_ID			NUMBER(10)		DEFAULT 0 NOT NULL,
	MPTEST_INFO_ID		NUMBER(5)		DEFAULT 0 NOT NULL,
	SITE_NO				NUMBER(5)		DEFAULT 1 NOT NULL,
	EXEC_COUNT			NUMBER(8)		DEFAULT 0 NOT NULL,
	FAIL_COUNT			NUMBER(8)		DEFAULT 0 NOT NULL,
	MIN_VALUE			NUMBER			DEFAULT NULL,
	MAX_VALUE			NUMBER			DEFAULT NULL,
	SUM					NUMBER			DEFAULT NULL,
	SQUARE_SUM			NUMBER			DEFAULT NULL,
	TTIME				NUMBER(10)		DEFAULT NULL
)
PARTITION BY RANGE (SPLITLOT_ID) 
(PARTITION FIRSTPART VALUES LESS THAN (MAXVALUE) TABLESPACE &GEXADMIN._FT_S PCTFREE 5 PCTUSED 80 &LOGGINGMODE. COMPRESS);


CREATE TABLE &GEXADMIN..FT_FTEST_INFO (
	SPLITLOT_ID			NUMBER(10)		DEFAULT 0 NOT NULL,
	FTEST_INFO_ID		NUMBER(5)		DEFAULT 0 NOT NULL,
	TNUM				NUMBER(10)		DEFAULT 0 NOT NULL,
	TNAME				VARCHAR2(255)	DEFAULT '',
	TESTSEQ				NUMBER(5)		DEFAULT NULL
)
PARTITION BY RANGE (SPLITLOT_ID) 
(PARTITION FIRSTPART VALUES LESS THAN (MAXVALUE) TABLESPACE &GEXADMIN._FT_S PCTFREE 5 PCTUSED 80 &LOGGINGMODE. COMPRESS);


CREATE TABLE &GEXADMIN..FT_FTEST_RESULTS (
	SPLITLOT_ID			NUMBER(10)		DEFAULT 0 NOT NULL,
	FTEST_INFO_ID		NUMBER(5)		NOT NULL,
	RUN_ID				NUMBER(8)		DEFAULT 0 NOT NULL,
	FLAGS				CHAR(1)			DEFAULT NULL,
	VECT_NAM			VARCHAR2(255)	DEFAULT '',
	VECT_OFF			NUMBER(6)		DEFAULT NULL
)
PARTITION BY RANGE (SPLITLOT_ID) 
(PARTITION FIRSTPART VALUES LESS THAN (MAXVALUE) TABLESPACE &GEXADMIN._FT_R PCTFREE 5 PCTUSED 80 &LOGGINGMODE. COMPRESS);


CREATE TABLE &GEXADMIN..FT_FTEST_STATS_SAMPLES (
	SPLITLOT_ID			NUMBER(10)		DEFAULT 0 NOT NULL,
	FTEST_INFO_ID		NUMBER(5)		DEFAULT 0 NOT NULL,
	SITE_NO				NUMBER(5)		DEFAULT 1 NOT NULL,
	EXEC_COUNT			NUMBER(8)		DEFAULT 0 NOT NULL,
	FAIL_COUNT			NUMBER(8)		DEFAULT NULL
)
PARTITION BY RANGE (SPLITLOT_ID) 
(PARTITION FIRSTPART VALUES LESS THAN (MAXVALUE) TABLESPACE &GEXADMIN._FT_S PCTFREE 5 PCTUSED 80 &LOGGINGMODE. COMPRESS);


CREATE TABLE &GEXADMIN..FT_FTEST_STATS_SUMMARY (
	SPLITLOT_ID			NUMBER(10)		DEFAULT 0 NOT NULL,
	FTEST_INFO_ID		NUMBER(5)		DEFAULT 0 NOT NULL,
	SITE_NO				NUMBER(5)		DEFAULT 1 NOT NULL,
	EXEC_COUNT			NUMBER(8)		DEFAULT NULL,
	FAIL_COUNT			NUMBER(8)		DEFAULT NULL,
	TTIME				NUMBER(10)		DEFAULT NULL
)
PARTITION BY RANGE (SPLITLOT_ID) 
(PARTITION FIRSTPART VALUES LESS THAN (MAXVALUE) TABLESPACE &GEXADMIN._FT_S PCTFREE 5 PCTUSED 80 &LOGGINGMODE. COMPRESS);


CREATE INDEX &GEXADMIN..FT_PTEST_RESULTS 
		ON &GEXADMIN..FT_PTEST_RESULTS	(SPLITLOT_ID, 
		PTEST_INFO_ID) LOCAL COMPRESS;
		

CREATE INDEX &GEXADMIN..FT_MPTEST_RESULTS 
		ON &GEXADMIN..FT_MPTEST_RESULTS	(SPLITLOT_ID, 
		MPTEST_INFO_ID) LOCAL COMPRESS;
		

CREATE INDEX &GEXADMIN..FT_FTEST_RESULTS 
		ON &GEXADMIN..FT_FTEST_RESULTS	(SPLITLOT_ID, 
		FTEST_INFO_ID) LOCAL COMPRESS;


--
-- PURGE PROCEDURE
--

CREATE OR REPLACE PROCEDURE &GEXADMIN..PURGE_INVALID_SPLITLOTS
IS

	SplitlotNumber		NUMBER(10);
	SplitlotsForErase	VARCHAR2(256);
	-- Prepare cursor to have all Invalid SplitlotId for FT_SPLITLOT
	CURSOR curInvalidSplitlotsFT IS
			SELECT distinct SPLITLOT_ID FROM FT_SPLITLOT
			WHERE (VALID_SPLITLOT = 'N')
				AND (((new_time(sysdate,'EDT','GMT') - to_date('19700101','yyyymmdd')) * (24*60*60)) > INSERTION_TIME+100);
	-- Prepare cursor to have all Invalid SplitlotId for WT_SPLITLOT
	CURSOR curInvalidSplitlotsWT IS
			SELECT distinct SPLITLOT_ID FROM WT_SPLITLOT
			WHERE (VALID_SPLITLOT = 'N')
				AND (((new_time(sysdate,'EDT','GMT') - to_date('19700101','yyyymmdd')) * (24*60*60)) > INSERTION_TIME+100);
	-- Prepare cursor to have all Invalid SplitlotId for ET_SPLITLOT
	CURSOR curInvalidSplitlotsET IS
			SELECT distinct SPLITLOT_ID FROM ET_SPLITLOT
			WHERE (VALID_SPLITLOT = 'N')
				AND (((new_time(sysdate,'EDT','GMT') - to_date('19700101','yyyymmdd')) * (24*60*60)) > INSERTION_TIME+100);

	-------------------------------------------------------------
	-- BEGIN SUBPROCEDURE DECLARATION
	-------------------------------------------------------------
	PROCEDURE PURGE_INVALID_ELEMENTS
	(
	TestingStage 		VARCHAR2,	-- 'FT', 'ET' or 'WT'
	SplitlotsForErase	VARCHAR2
	)
	IS
	BEGIN
		-- Test entries before start purge
		IF NOT((TestingStage='FT') OR (TestingStage='ET') OR (TestingStage='WT')) THEN RETURN; END IF;
		IF (Length(SplitlotsForErase)<1) THEN RETURN; END IF;


	-- A - Purge RUN RESULTS
		EXECUTE IMMEDIATE 'DELETE FROM '||TestingStage ||'_PTEST_RESULTS WHERE SPLITLOT_Id IN ('||SplitlotsForErase||')';
		IF ((TestingStage='FT') OR (TestingStage='WT')) THEN
			EXECUTE IMMEDIATE 'DELETE FROM '||TestingStage ||'_MPTEST_RESULTS WHERE SPLITLOT_Id IN ('||SplitlotsForErase||')';
			EXECUTE IMMEDIATE 'DELETE FROM '||TestingStage ||'_FTEST_RESULTS WHERE SPLITLOT_Id IN ('||SplitlotsForErase||')';
		END IF;
		EXECUTE IMMEDIATE 'DELETE FROM '||TestingStage ||'_RUN WHERE SPLITLOT_Id IN ('||SplitlotsForErase||')';

	-- B - Purge STATS RESULTS
		EXECUTE IMMEDIATE 'DELETE FROM '||TestingStage ||'_PTEST_INFO WHERE SPLITLOT_Id IN ('||SplitlotsForErase||')';
		IF ((TestingStage='FT') OR (TestingStage='WT')) THEN
			EXECUTE IMMEDIATE 'DELETE FROM '||TestingStage ||'_PTEST_STATS_SUMMARY WHERE SPLITLOT_Id IN ('||SplitlotsForErase||')';
			EXECUTE IMMEDIATE 'DELETE FROM '||TestingStage ||'_PTEST_STATS_SAMPLES WHERE SPLITLOT_Id IN ('||SplitlotsForErase||')';
			EXECUTE IMMEDIATE 'DELETE FROM '||TestingStage ||'_PTEST_LIMITS WHERE SPLITLOT_Id IN ('||SplitlotsForErase||')';
			EXECUTE IMMEDIATE 'DELETE FROM '||TestingStage ||'_FTEST_STATS_SUMMARY WHERE SPLITLOT_Id IN ('||SplitlotsForErase||')';
			EXECUTE IMMEDIATE 'DELETE FROM '||TestingStage ||'_FTEST_STATS_SAMPLES WHERE SPLITLOT_Id IN ('||SplitlotsForErase||')';
			EXECUTE IMMEDIATE 'DELETE FROM '||TestingStage ||'_FTEST_INFO WHERE SPLITLOT_Id IN ('||SplitlotsForErase||')';
			EXECUTE IMMEDIATE 'DELETE FROM '||TestingStage ||'_MPTEST_STATS_SUMMARY WHERE SPLITLOT_Id IN ('||SplitlotsForErase||')';
			EXECUTE IMMEDIATE 'DELETE FROM '||TestingStage ||'_MPTEST_STATS_SAMPLES WHERE SPLITLOT_Id IN ('||SplitlotsForErase||')';
			EXECUTE IMMEDIATE 'DELETE FROM '||TestingStage ||'_MPTEST_LIMITS WHERE SPLITLOT_Id IN ('||SplitlotsForErase||')';
			EXECUTE IMMEDIATE 'DELETE FROM '||TestingStage ||'_MPTEST_INFO WHERE SPLITLOT_Id IN ('||SplitlotsForErase||')';
			EXECUTE IMMEDIATE 'DELETE FROM '||TestingStage ||'_SBIN_STATS_SAMPLES WHERE SPLITLOT_Id IN ('||SplitlotsForErase||')';
			EXECUTE IMMEDIATE 'DELETE FROM '||TestingStage ||'_SBIN_STATS_SUMMARY WHERE SPLITLOT_Id IN ('||SplitlotsForErase||')';
			EXECUTE IMMEDIATE 'DELETE FROM '||TestingStage ||'_HBIN_STATS_SAMPLES WHERE SPLITLOT_Id IN ('||SplitlotsForErase||')';
			EXECUTE IMMEDIATE 'DELETE FROM '||TestingStage ||'_HBIN_STATS_SUMMARY WHERE SPLITLOT_Id IN ('||SplitlotsForErase||')';
			EXECUTE IMMEDIATE 'DELETE FROM '||TestingStage ||'_PARTS_STATS_SAMPLES WHERE SPLITLOT_Id IN ('||SplitlotsForErase||')';
			EXECUTE IMMEDIATE 'DELETE FROM '||TestingStage ||'_PARTS_STATS_SUMMARY WHERE SPLITLOT_Id IN ('||SplitlotsForErase||')';
		ELSE
			EXECUTE IMMEDIATE 'DELETE FROM '||TestingStage ||'_PTEST_STATS WHERE SPLITLOT_Id IN ('||SplitlotsForErase||')';
		END IF;
		EXECUTE IMMEDIATE 'DELETE FROM '||TestingStage ||'_SBIN WHERE SPLITLOT_Id IN ('||SplitlotsForErase||')';
		EXECUTE IMMEDIATE 'DELETE FROM '||TestingStage ||'_HBIN WHERE SPLITLOT_Id IN ('||SplitlotsForErase||')';

	-- C - Purge SPLITLOT entries
		IF ((TestingStage='WT') OR (TestingStage='ET')) THEN
			EXECUTE IMMEDIATE 'DELETE FROM '||TestingStage ||'_WAFER_INFO WHERE SPLITLOT_Id IN ('||SplitlotsForErase||')';
		END IF;
		EXECUTE IMMEDIATE 'DELETE FROM '||TestingStage ||'_SPLITLOT WHERE SPLITLOT_Id IN ('||SplitlotsForErase||')';

	END;
	-------------------------------------------------------------
	-- END SUBPROCEDURE DECLARATION
	-------------------------------------------------------------
BEGIN
	-- FT_SPLITLOT
	-- have to found all invalid splitlot
	-- and create a list for delete
	-- Execute cursor
	SplitlotsForErase := '';
	OPEN curInvalidSplitlotsFT;
	LOOP
		FETCH curInvalidSplitlotsFT INTO SplitlotNumber;
		EXIT WHEN curInvalidSplitlotsFT%NOTFOUND;
 	 	IF (Length(SplitlotsForErase)>1) THEN SplitlotsForErase := CONCAT(SplitlotsForErase,','); END IF;
 	 	SplitlotsForErase := CONCAT(SplitlotsForErase, to_char(SplitlotNumber));
	END LOOP;
	CLOSE curInvalidSplitlotsFT;
	IF (Length(SplitlotsForErase)>1) THEN PURGE_INVALID_ELEMENTS('FT',SplitlotsForErase); END IF;
	-- WT_SPLITLOT
	-- have to found all invalid splitlot
	-- and create a list for delete
	-- Execute cursor
	SplitlotsForErase := '';
	OPEN curInvalidSplitlotsWT;
	LOOP
		FETCH curInvalidSplitlotsWT INTO SplitlotNumber;
		EXIT WHEN curInvalidSplitlotsWT%NOTFOUND;
 	 	IF (Length(SplitlotsForErase)>1) THEN SplitlotsForErase := CONCAT(SplitlotsForErase,','); END IF;
 	 	SplitlotsForErase := CONCAT(SplitlotsForErase, to_char(SplitlotNumber));
	END LOOP;
	CLOSE curInvalidSplitlotsWT;
	IF (Length(SplitlotsForErase)>1) THEN PURGE_INVALID_ELEMENTS('WT',SplitlotsForErase); END IF;
	-- ET_SPLITLOT
	-- have to found all invalid splitlot
	-- and create a list for delete
	-- Execute cursor
	SplitlotsForErase := '';
	OPEN curInvalidSplitlotsET;
	LOOP
		FETCH curInvalidSplitlotsET INTO SplitlotNumber;
		EXIT WHEN curInvalidSplitlotsET%NOTFOUND;
 	 	IF (Length(SplitlotsForErase)>1) THEN SplitlotsForErase := CONCAT(SplitlotsForErase,','); END IF;
 	 	SplitlotsForErase := CONCAT(SplitlotsForErase, to_char(SplitlotNumber));
	END LOOP;
	CLOSE curInvalidSplitlotsET;
	IF (Length(SplitlotsForErase)>1) THEN PURGE_INVALID_ELEMENTS('ET',SplitlotsForErase); END IF;
END;
/

CREATE OR REPLACE PROCEDURE &GEXADMIN..PURGE_SPLITLOTS
 ( 
SamplesNbWeeks NUMBER,	-- Nb of weeks before delete samples 
StatsNbWeeks NUMBER,	-- Nb of weeks before delete stats 
EntriesNbWeeks NUMBER	-- Nb of weeks before delete entries 
) 
IS 
 
	------------------------------------------------------------- 
	-- SUBPROCEDURE DECLARATION 
	------------------------------------------------------------- 
	PROCEDURE PURGE_ELEMENTS 
	( 
	TestingStage VARCHAR2,	-- 'FT', 'ET' or 'WT' 
	NbWeeks NUMBER,		-- Nb of weeks before delete 
	PurgeLevel NUMBER	-- Level of purge 
				-- 1 for SAMPLES only 
				-- 2 for SAMPLES and STATS 
				-- 3 for SAMPLES, STATS and Entries 
	) 
	IS 
	SPLITLOTForErase	NUMBER; 
	TableSpaceForErase	NUMBER; 
	TableName			VARCHAR2(256); 
	PartitionForErase	VARCHAR2(6); 
	-- Prepare cursor to have all tables name saved in tablespaces_for_erase 
	CURSOR curTablePartition(TBS NUMBER, TS VARCHAR2) IS 
			SELECT distinct TABLE_NAME, substr(TABLESPACE_NAME,-4,4)+0	FROM USER_TAB_PARTITIONS 
			WHERE Length(TABLESPACE_NAME)>13 AND substr(TABLESPACE_NAME,-4,4)+0<=TBS 
			AND substr(TABLE_NAME,0,2)=TS; 
	-- Prepare cursor to have tablespaces name for delETe 
	CURSOR curTableSpace(TBS NUMBER, TS VARCHAR2) IS 
			SELECT distinct TABLESPACE_NAME FROM USER_TAB_PARTITIONS 
			WHERE Length(TABLESPACE_NAME)>13 AND substr(TABLESPACE_NAME,-4,4)+0<=TBS 
			AND substr(TABLE_NAME,0,2)=TS; 
	-- Prepare cursor to have partition name for delETe from specific table_name 
	CURSOR curPartition(TBS NUMBER, TN VARCHAR2) IS 
			SELECT distinct PARTITION_NAME FROM USER_TAB_PARTITIONS 
			WHERE Length(TABLESPACE_NAME)>13 AND substr(TABLESPACE_NAME,-4,4)+0<=TBS 
			AND TABLE_NAME=TN ; 
 
	BEGIN 
		-- Test entries before start purge 
		IF NOT((TestingStage='FT') OR (TestingStage='ET') OR (TestingStage='WT')) THEN RETURN; END IF; 
		IF NOT(0 <= NbWeeks) THEN RETURN; END IF; 
		IF NOT((0 < PurgeLevel) AND (PurgeLevel <= 3)) THEN RETURN; END IF; 
 
		SELECT TO_CHAR(CURRENT_DATE - (NbWeeks*7), 'YYWW')+0 INTO TableSpaceForErase FROM dual ; 
		SELECT TO_CHAR(CURRENT_DATE - (NbWeeks*7), 'YYMMDD')*10000 INTO SPLITLOTForErase FROM dual ; 
 
		-- have to delETe each partition of the table_RESULTS 
		-- and drop the tablespace 
		-- first found the tablespace number for the purge limit 
		-- if current date('YYWW') is 0639 and the NbWeeks is 4 
		-- the limit for the purge is 0635 
		-- all tablespace less than 0635 have to be delETe 
 
	-- A - Purge sample RESULTS 
		-- 1 - Drop all partition table using tablespace for erase 
		-- 2 - Drop empty tablespace 
	-- B - Purge RUN RESULTS 
	-- C - Purge STATS RESULTS 
	-- D - Purge SPLITLOT entries 
 
	-- A - Purge sample RESULTS 
		-- Execute cursor 
		OPEN curTablePartition(TableSpaceForErase,TestingStage); 
		OPEN curTableSpace(TableSpaceForErase,TestingStage); 
 
		LOOP 
		-- 1 - Drop all partition table using tablespace for erase 
			FETCH curTablePartition INTO TableName, TableSpaceForErase; 
			EXIT WHEN curTablePartition%NOTFOUND; 
 
			-- Execute cursor 
			OPEN curPartition(TableSpaceForErase,TableName); 
 
			LOOP 
				FETCH curPartition INTO PartitionForErase; 
				EXIT WHEN curPartition%NOTFOUND;
				EXECUTE IMMEDIATE 'ALTER TABLE '||TableName||' DROP PARTITION "'||trim(to_char(PartitionForErase,'099999'))||'"';
			END LOOP; 
			CLOSE curPartition; 
 
		END LOOP; 
		CLOSE curTablePartition; 
		LOOP 
		-- 2 - Drop empty tablespace 
			FETCH curTableSpace INTO TableName; 
			EXIT WHEN curTableSpace%NOTFOUND; 
			EXECUTE IMMEDIATE 'DROP TABLESPACE '||TableName||' INCLUDING CONTENTS AND DATAFILES CASCADE CONSTRAINTS'; 
		END LOOP; 
		CLOSE curTableSpace; 
 
	-- B - Purge RUN RESULTS 
		EXECUTE IMMEDIATE 'DELETE FROM '||TestingStage ||'_RUN WHERE SPLITLOT_Id < '||SPLITLOTForErase; 
 
		IF (PurgeLevel=1) THEN RETURN; END IF; 
 
	-- C - Purge STATS RESULTS 
		EXECUTE IMMEDIATE 'DELETE FROM '||TestingStage ||'_PTEST_INFO WHERE SPLITLOT_Id < '||SPLITLOTForErase; 
		IF ((TestingStage='FT') OR (TestingStage='WT')) THEN 
			EXECUTE IMMEDIATE 'DELETE FROM '||TestingStage ||'_PTEST_STATS_SUMMARY WHERE SPLITLOT_Id < '||SPLITLOTForErase; 
			EXECUTE IMMEDIATE 'DELETE FROM '||TestingStage ||'_PTEST_STATS_SAMPLES WHERE SPLITLOT_Id < '||SPLITLOTForErase; 
			EXECUTE IMMEDIATE 'DELETE FROM '||TestingStage ||'_PTEST_LIMITS WHERE SPLITLOT_Id < '||SPLITLOTForErase; 
			EXECUTE IMMEDIATE 'DELETE FROM '||TestingStage ||'_FTEST_STATS_SUMMARY WHERE SPLITLOT_Id < '||SPLITLOTForErase; 
			EXECUTE IMMEDIATE 'DELETE FROM '||TestingStage ||'_FTEST_STATS_SAMPLES WHERE SPLITLOT_Id < '||SPLITLOTForErase; 
			EXECUTE IMMEDIATE 'DELETE FROM '||TestingStage ||'_FTEST_INFO WHERE SPLITLOT_Id < '||SPLITLOTForErase; 
			EXECUTE IMMEDIATE 'DELETE FROM '||TestingStage ||'_MPTEST_STATS_SUMMARY WHERE SPLITLOT_Id < '||SPLITLOTForErase; 
			EXECUTE IMMEDIATE 'DELETE FROM '||TestingStage ||'_MPTEST_STATS_SAMPLES WHERE SPLITLOT_Id < '||SPLITLOTForErase; 
			EXECUTE IMMEDIATE 'DELETE FROM '||TestingStage ||'_MPTEST_LIMITS WHERE SPLITLOT_Id < '||SPLITLOTForErase; 
			EXECUTE IMMEDIATE 'DELETE FROM '||TestingStage ||'_MPTEST_INFO WHERE SPLITLOT_Id < '||SPLITLOTForErase; 
			EXECUTE IMMEDIATE 'DELETE FROM '||TestingStage ||'_SBIN_STATS_SAMPLES WHERE SPLITLOT_Id < '||SPLITLOTForErase; 
			EXECUTE IMMEDIATE 'DELETE FROM '||TestingStage ||'_SBIN_STATS_SUMMARY WHERE SPLITLOT_Id < '||SPLITLOTForErase; 
			EXECUTE IMMEDIATE 'DELETE FROM '||TestingStage ||'_HBIN_STATS_SAMPLES WHERE SPLITLOT_Id < '||SPLITLOTForErase; 
			EXECUTE IMMEDIATE 'DELETE FROM '||TestingStage ||'_HBIN_STATS_SUMMARY WHERE SPLITLOT_Id < '||SPLITLOTForErase; 
			EXECUTE IMMEDIATE 'DELETE FROM '||TestingStage ||'_PARTS_STATS_SAMPLES WHERE SPLITLOT_Id < '||SPLITLOTForErase; 
			EXECUTE IMMEDIATE 'DELETE FROM '||TestingStage ||'_PARTS_STATS_SUMMARY WHERE SPLITLOT_Id < '||SPLITLOTForErase; 
		ELSE
			EXECUTE IMMEDIATE 'DELETE FROM '||TestingStage ||'_PTEST_STATS WHERE SPLITLOT_Id < '||SPLITLOTForErase; 
		END IF; 
		EXECUTE IMMEDIATE 'DELETE FROM '||TestingStage ||'_SBIN WHERE SPLITLOT_Id < '||SPLITLOTForErase; 
		EXECUTE IMMEDIATE 'DELETE FROM '||TestingStage ||'_HBIN WHERE SPLITLOT_Id < '||SPLITLOTForErase; 
 
		IF (PurgeLevel=2) THEN RETURN; END IF; 
 
	-- D - Purge SPLITLOT entries 
		IF ((TestingStage='WT') OR (TestingStage='ET')) THEN 
			EXECUTE IMMEDIATE 'DELETE FROM '||TestingStage ||'_WAFER_INFO WHERE SPLITLOT_Id < '||SPLITLOTForErase; 
		END IF; 
		EXECUTE IMMEDIATE 'DELETE FROM '||TestingStage ||'_SPLITLOT WHERE SPLITLOT_Id < '||SPLITLOTForErase; 
 
	END; 
	------------------------------------------------------------- 
	-- SUBPROCEDURE END 
	------------------------------------------------------------- 
BEGIN 
	PURGE_ELEMENTS('FT',SamplesNbWeeks,1); 
	PURGE_ELEMENTS('ET',SamplesNbWeeks,1); 
	PURGE_ELEMENTS('WT',SamplesNbWeeks,1); 
 
	PURGE_ELEMENTS('FT',StatsNbWeeks,2); 
	PURGE_ELEMENTS('ET',StatsNbWeeks,2); 
	PURGE_ELEMENTS('WT',StatsNbWeeks,2); 
 
	PURGE_ELEMENTS('FT',EntriesNbWeeks,3); 
	PURGE_ELEMENTS('ET',EntriesNbWeeks,3); 
	PURGE_ELEMENTS('WT',EntriesNbWeeks,3); 
 
	PURGE_INVALID_SPLITLOTS(); 
END;
/

CREATE OR REPLACE PROCEDURE &GEXADMIN..ADD_PURGE_JOB
(
PurgeJobName		VARCHAR2,	-- Name for the Job &GEXADMIN..Name
PurgeRepeatInterval	VARCHAR2,	-- Oracle Repeat Interval
PurgeJobComments	VARCHAR2,	-- Comments for creation
SamplesNbWeeks 		VARCHAR2,	-- Nb of weeks before delete samples
StatsNbWeeks 		VARCHAR2,	-- Nb of weeks before delete stats
EntriesNbWeeks 		VARCHAR2	-- Nb of weeks before delete entries
)
IS
	JobName		VARCHAR2(256);
	CURSOR curJobs IS SELECT JOB_NAME FROM ALL_SCHEDULER_JOBS WHERE JOB_NAME=PurgeJobName;
BEGIN
	-- IF ALREADY EXIST HAVE TO DROP IT
	OPEN curJobs;
	LOOP
		FETCH curJobs INTO JobName;
		EXIT WHEN curJobs%NOTFOUND;
		sys.dbms_scheduler.drop_job(Job_Name => CONCAT('&GEXADMIN..',PurgeJobName), force => TRUE);
	END LOOP;
	sys.dbms_scheduler.create_job(
		job_name => CONCAT('&GEXADMIN..',PurgeJobName),
		job_type => 'STORED_PROCEDURE',
		job_action => '&GEXADMIN..PURGE_SPLITLOTS',
		repeat_interval => PurgeRepeatInterval,
		start_date => systimestamp at time zone '+2:00',
		job_class => 'DEFAULT_JOB_CLASS',
		comments => PurgeJobComments,
		auto_drop => FALSE,
		number_of_arguments => 3,
		enabled => FALSE);
	sys.dbms_scheduler.set_job_argument_value( job_name => PurgeJobName, argument_position => 1, argument_value => SamplesNbWeeks);
	sys.dbms_scheduler.set_job_argument_value( job_name => PurgeJobName, argument_position => 2, argument_value => StatsNbWeeks);
	sys.dbms_scheduler.set_job_argument_value( job_name => PurgeJobName, argument_position => 3, argument_value => EntriesNbWeeks);
	sys.dbms_scheduler.enable( PurgeJobName );
END;
/

CREATE OR REPLACE PROCEDURE &GEXADMIN..ET_INSERTION_VALIDATION
(
SplitlotID			IN NUMBER,		-- SplitlotId of the splitlot to be validated
TrackingLotID		IN VARCHAR2,	-- Tracking lot of the splitlot to be validated
LotID				IN VARCHAR2,	-- Lot of the splitlot to be validated
WaferID				IN VARCHAR2,	-- WaferID of the splitlot to be inserted
TrackingLotID_Out	OUT VARCHAR2,	-- Tracking to be used in GexDB for this splitlot
LotID_Out			OUT VARCHAR2,	-- LotID to be used in GexDB for this splitlot
ProductName			OUT VARCHAR2,	-- Return the Product Name if it has to be overloaded
Message				OUT VARCHAR2,	-- Return the Error message in case the validation fails
Status				OUT NUMBER		-- Return the validation status: 1 if validation successful, 0 else
)
IS
BEGIN
	-- Init variables
	TrackingLotID_Out := TrackingLotID;
	LotID_Out := LotID;
	Message := 'Success';
	Status := 1;
	RETURN;
END;
/

CREATE OR REPLACE PROCEDURE &GEXADMIN..ET_INSERTION_STATUS
(
SplitlotID		IN NUMBER,		-- SplitlotId of the splitlot to be inserted
TrackingLotID	IN VARCHAR2,	-- Tracking lot of the splitlot to be inserted
LotID			IN VARCHAR2,	-- Lot of the splitlot to be inserted
WaferID			IN VARCHAR2,	-- WaferID of the splitlot to be inserted
Message			IN VARCHAR2,	-- Error message in case the insertion failed
Status			IN NUMBER		-- Insertion status: 1 if insertion successful, 0 else
)
IS
BEGIN
	RETURN;
END;
/

CREATE OR REPLACE PROCEDURE &GEXADMIN..ET_FILEARCHIVE_SETTINGS
(   
SplitlotID			IN NUMBER,		-- SplitlotId of the splitlot to be inserted
TrackingLotID		IN VARCHAR2,	-- Tracking lot of the splitlot to be inserted
LotID				IN VARCHAR2,	-- Lot of the splitlot to be inserted
WaferID				IN VARCHAR2,	-- WaferID of the splitlot to be inserted
UseArchiveSettings	OUT NUMBER,		-- Return 1 if the Archivesettings should be used, 0 else    
MovePath			OUT VARCHAR2,	-- Return the path to use if the file should be moved after insertion (DataPump settings)
FtpPort				OUT NUMBER,		-- Return the Ftp port to use if the file should be Ftp'ed after insertion (DataPump settings)   
FtpServer			OUT VARCHAR2,	-- Return the Ftp server to use if the file should be Ftp'ed after insertion (DataPump settings)
FtpUser				OUT VARCHAR2,	-- Return the Ftp user to use if the file should be Ftp'ed after insertion (DataPump settings)
FtpPassword			OUT VARCHAR2,	-- Return the Ftp password to use if the file should be Ftp'ed after insertion (DataPump settings)
FtpPath				OUT VARCHAR2	-- Return the Ftp path to use if the file should be Ftp'ed after insertion (DataPump settings)
)   
IS
BEGIN
	MovePath := '';   
	FtpServer := '';   
	FtpPort := 21;   
	FtpUser := '';   
	FtpPassword := '';   
	FtpPath := '';   
	UseArchiveSettings := 0;   
	RETURN;   
END;
/

CREATE OR REPLACE PROCEDURE &GEXADMIN..WT_INSERTION_VALIDATION
(
SplitlotID			IN NUMBER,		-- SplitlotId of the splitlot to be validated
TrackingLotID		IN VARCHAR2,	-- Tracking lot of the splitlot to be validated
LotID				IN VARCHAR2,	-- Lot of the splitlot to be validated
WaferID				IN VARCHAR2,	-- WaferID of the splitlot to be inserted
TrackingLotID_Out	OUT VARCHAR2,	-- Tracking to be used in GexDB for this splitlot
LotID_Out			OUT VARCHAR2,	-- LotID to be used in GexDB for this splitlot
ProductName			OUT VARCHAR2,	-- Return the Product Name if it has to be overloaded
Message				OUT VARCHAR2,	-- Return the Error message in case the validation fails
Status				OUT NUMBER		-- Return the validation status: 1 if validation successful, 0 else
)
IS
BEGIN
	-- Init variables
	TrackingLotID_Out := TrackingLotID;
	LotID_Out := LotID;
	Message := 'Success';
	Status := 1;
	RETURN;
END;
/

CREATE OR REPLACE PROCEDURE &GEXADMIN..WT_INSERTION_STATUS
(
SplitlotID		IN NUMBER,		-- SplitlotId of the splitlot to be inserted
TrackingLotID	IN VARCHAR2,	-- Tracking lot of the splitlot to be inserted
LotID			IN VARCHAR2,	-- Lot of the splitlot to be inserted
WaferID			IN VARCHAR2,	-- WaferID of the splitlot to be inserted
Message			IN VARCHAR2,	-- Error message in case the insertion failed
Status			IN NUMBER		-- Insertion status: 1 if insertion successful, 0 else
)
IS
BEGIN
	RETURN;
END;
/

CREATE OR REPLACE PROCEDURE &GEXADMIN..WT_FILEARCHIVE_SETTINGS
(   
SplitlotID			IN NUMBER,		-- SplitlotId of the splitlot to be inserted
TrackingLotID		IN VARCHAR2,	-- Tracking lot of the splitlot to be inserted
LotID				IN VARCHAR2,	-- Lot of the splitlot to be inserted
WaferID				IN VARCHAR2,	-- WaferID of the splitlot to be inserted
UseArchiveSettings	OUT NUMBER,		-- Return 1 if the Archivesettings should be used, 0 else    
MovePath			OUT VARCHAR2,	-- Return the path to use if the file should be moved after insertion (DataPump settings)
FtpPort				OUT NUMBER,		-- Return the Ftp port to use if the file should be Ftp'ed after insertion (DataPump settings)   
FtpServer			OUT VARCHAR2,	-- Return the Ftp server to use if the file should be Ftp'ed after insertion (DataPump settings)
FtpUser				OUT VARCHAR2,	-- Return the Ftp user to use if the file should be Ftp'ed after insertion (DataPump settings)
FtpPassword			OUT VARCHAR2,	-- Return the Ftp password to use if the file should be Ftp'ed after insertion (DataPump settings)
FtpPath				OUT VARCHAR2	-- Return the Ftp path to use if the file should be Ftp'ed after insertion (DataPump settings)
)   
IS
BEGIN
	MovePath := '';   
	FtpServer := '';   
	FtpPort := 21;   
	FtpUser := '';   
	FtpPassword := '';   
	FtpPath := '';   
	UseArchiveSettings := 0;   
	RETURN;   
END;
/

CREATE OR REPLACE PROCEDURE &GEXADMIN..FT_INSERTION_VALIDATION
(
SplitlotID			IN NUMBER,		-- SplitlotId of the splitlot to be validated
TrackingLotID		IN VARCHAR2,	-- Tracking lot of the splitlot to be validated
LotID				IN VARCHAR2,	-- Lot of the splitlot to be validated
WaferID				IN VARCHAR2,	-- WaferID of the splitlot to be inserted (not used for FT)
TrackingLotID_Out	OUT VARCHAR2,	-- Tracking to be used in GexDB for this splitlot
LotID_Out			OUT VARCHAR2,	-- LotID to be used in GexDB for this splitlot
ProductName			OUT VARCHAR2,	-- Return the Product Name if it has to be overloaded
Message				OUT VARCHAR2,	-- Return the Error message in case the validation fails
Status				OUT NUMBER		-- Return the validation status: 1 if validation successful, 0 else
)
IS
BEGIN
	-- Init variables
	TrackingLotID_Out := TrackingLotID;
	LotID_Out := LotID;
	Message := 'Success';
	Status := 1;
	RETURN;
END;
/

CREATE OR REPLACE PROCEDURE &GEXADMIN..FT_INSERTION_STATUS
(
SplitlotID		IN NUMBER,		-- SplitlotId of the splitlot to be inserted
TrackingLotID	IN VARCHAR2,	-- Tracking lot of the splitlot to be inserted
LotID			IN VARCHAR2,	-- Lot of the splitlot to be inserted
WaferID			IN VARCHAR2,	-- WaferID of the splitlot to be inserted (not used for FT)
Message			IN VARCHAR2,	-- Error message in case the insertion failed
Status			IN NUMBER		-- Insertion status: 1 if insertion successful, 0 else
)
IS
BEGIN
	RETURN;
END;
/

CREATE OR REPLACE PROCEDURE &GEXADMIN..FT_FILEARCHIVE_SETTINGS
(   
SplitlotID			IN NUMBER,		-- SplitlotId of the splitlot to be inserted
TrackingLotID		IN VARCHAR2,	-- Tracking lot of the splitlot to be inserted
LotID				IN VARCHAR2,	-- Lot of the splitlot to be inserted
WaferID				IN VARCHAR2,	-- WaferID of the splitlot to be inserted (not used for FT)
UseArchiveSettings	OUT NUMBER,		-- Return 1 if the Archivesettings should be used, 0 else    
MovePath			OUT VARCHAR2,	-- Return the path to use if the file should be moved after insertion (DataPump settings)
FtpPort				OUT NUMBER,		-- Return the Ftp port to use if the file should be Ftp'ed after insertion (DataPump settings)   
FtpServer			OUT VARCHAR2,	-- Return the Ftp server to use if the file should be Ftp'ed after insertion (DataPump settings)
FtpUser				OUT VARCHAR2,	-- Return the Ftp user to use if the file should be Ftp'ed after insertion (DataPump settings)
FtpPassword			OUT VARCHAR2,	-- Return the Ftp password to use if the file should be Ftp'ed after insertion (DataPump settings)
FtpPath				OUT VARCHAR2	-- Return the Ftp path to use if the file should be Ftp'ed after insertion (DataPump settings)
)   
IS
BEGIN
	MovePath := '';   
	FtpServer := '';   
	FtpPort := 21;   
	FtpUser := '';   
	FtpPassword := '';   
	FtpPath := '';   
	UseArchiveSettings := 0;   
	RETURN;   
END;
/

exit;
