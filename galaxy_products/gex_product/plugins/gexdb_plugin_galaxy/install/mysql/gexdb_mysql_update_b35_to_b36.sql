-- ---------------------------------------------------------
-- DO NOT EDIT THIS FILE UNLESS: 
-- o To customize the update 
-- o To execute it manually
-- ---------------------------------------------------------

-- ---------------------------------------------------------
-- CAUTION/INFO/QUESTION messages below are not commented to make sure that 
-- scripts are in the right state before to be ran manually
-- ---------------------------------------------------------
CAUTION: When manually running this script, perform the following four steps:
CAUTION: 1. Uncomment the line below and specify a working database.
-- use database_name_xx;
CAUTION: 2. To catch all errors, comment each line "DECLARE EXIT HANDLER FOR SQLEXCEPTION" (if it exists) as shown below:
CAUTION: -- DECLARE EXIT HANDLER FOR SQLEXCEPTION
CAUTION: 3. Before running the first TDR update script, run the script common_update_initialize.sql, then tdr_update_initialize.sql.
CAUTION: 4. After running the last TDR update script, run the script tdr_update_finalize.sql, then common_update_finalize.sql.

-- ---------------------------------------------------------
-- START UPDATE
-- ---------------------------------------------------------
CALL is_compatible_version(35, @status, @message);
CALL start_update('GEXDB V5.01 B36 (MySQL)', 501, 36, @status, @message);

-- for admin
CALL drop_column_if_exists(Database(),'token','sql_id', @status, @message);
CALL add_column_if_not_exists(Database(),'token','session_id','varchar(256) NOT NULL', @status, @message);

-- SQLite alignement
CALL alter_column(Database(), 'et_sdr', 'splitlot_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'wt_sdr', 'splitlot_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'ft_sdr', 'splitlot_id', 'DROP DEFAULT', @status, @message);
CALL change_column(Database(), 'ft_event', 'splitlot_id', 'int(10) unsigned NOT NULL', @status, @message);
CALL alter_column(Database(), 'et_splitlot_metadata', 'splitlot_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'wt_splitlot_metadata', 'splitlot_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'ft_splitlot_metadata', 'splitlot_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'et_ptest_info', 'splitlot_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'et_ptest_info', 'ptest_info_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'et_ptest_info', 'tnum', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'wt_ptest_info', 'splitlot_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'wt_ptest_info', 'ptest_info_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'wt_ptest_info', 'tnum', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'ft_ptest_info', 'splitlot_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'ft_ptest_info', 'ptest_info_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'ft_ptest_info', 'tnum', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'wt_ftest_info', 'splitlot_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'wt_ftest_info', 'ftest_info_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'wt_ftest_info', 'tnum', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'ft_ftest_info', 'splitlot_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'ft_ftest_info', 'ftest_info_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'ft_ftest_info', 'tnum', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'wt_mptest_info', 'splitlot_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'wt_mptest_info', 'mptest_info_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'wt_mptest_info', 'tnum', 'DROP DEFAULT', @status, @message);
CALL change_column(Database(), 'wt_mptest_info', 'tpin_arrayindex', 'smallint(6) unsigned NOT NULL', @status, @message);
CALL drop_primary_key_to(Database(), 'ft_mptest_info', @status, @message);
CALL alter_column(Database(), 'ft_mptest_info', 'splitlot_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'ft_mptest_info', 'mptest_info_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'ft_mptest_info', 'tnum', 'DROP DEFAULT', @status, @message);
CALL change_column(Database(), 'ft_mptest_info', 'tpin_arrayindex', 'smallint(6) unsigned NOT NULL', @status, @message);
CALL add_primary_key_to(Database(), 'ft_mptest_info', 'splitlot_id,mptest_info_id', @status, @message);
CALL alter_column(Database(), 'wt_ptest_static_limits', 'splitlot_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'wt_ptest_static_limits', 'ptest_info_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'ft_ptest_static_limits', 'splitlot_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'ft_ptest_static_limits', 'ptest_info_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'wt_mptest_static_limits', 'splitlot_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'wt_mptest_static_limits', 'mptest_info_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'ft_mptest_static_limits', 'splitlot_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'ft_mptest_static_limits', 'mptest_info_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'ft_ptest_rollinglimits', 'splitlot_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'ft_ptest_rollinglimits', 'ptest_info_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'ft_mptest_rollinglimits', 'splitlot_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'ft_mptest_rollinglimits', 'mptest_info_id', 'DROP DEFAULT', @status, @message);
CALL change_column(Database(), 'ft_ptest_rollingstats', 'splitlot_id', 'int(10) unsigned NOT NULL', @status, @message);
CALL alter_column(Database(), 'et_ptest_results', 'splitlot_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'et_ptest_results', 'ptest_info_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'et_ptest_results', 'run_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'et_ptest_results', 'testseq', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'wt_ptest_results', 'splitlot_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'wt_ptest_results', 'ptest_info_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'wt_ptest_results', 'run_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'wt_ptest_results', 'testseq', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'ft_ptest_results', 'splitlot_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'ft_ptest_results', 'ptest_info_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'ft_ptest_results', 'run_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'ft_ptest_results', 'testseq', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'wt_ftest_results', 'splitlot_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'wt_ftest_results', 'run_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'wt_ftest_results', 'testseq', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'ft_ftest_results', 'splitlot_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'ft_ftest_results', 'run_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'ft_ftest_results', 'testseq', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'wt_mptest_results', 'splitlot_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'wt_mptest_results', 'mptest_info_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'wt_mptest_results', 'run_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'wt_mptest_results', 'testseq', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'ft_mptest_results', 'splitlot_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'ft_mptest_results', 'mptest_info_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'ft_mptest_results', 'run_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'ft_mptest_results', 'testseq', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'wt_ptest_limits', 'splitlot_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'wt_ptest_limits', 'ptest_info_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'ft_ptest_limits', 'splitlot_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'ft_ptest_limits', 'ptest_info_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'ft_mptest_limits', 'splitlot_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'ft_mptest_limits', 'mptest_info_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'wt_mptest_limits', 'splitlot_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'wt_mptest_limits', 'mptest_info_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'et_lot_sbin', 'sbin_no', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'wt_lot_sbin', 'sbin_no', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'ft_lot_sbin', 'sbin_no', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'et_lot_hbin', 'hbin_no', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'wt_lot_hbin', 'hbin_no', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'ft_lot_hbin', 'hbin_no', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'et_sbin', 'splitlot_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'et_sbin', 'sbin_no', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'wt_sbin', 'splitlot_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'wt_sbin', 'sbin_no', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'ft_sbin', 'splitlot_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'ft_sbin', 'sbin_no', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'et_hbin', 'splitlot_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'et_hbin', 'hbin_no', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'wt_hbin', 'splitlot_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'wt_hbin', 'hbin_no', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'ft_hbin', 'splitlot_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'ft_hbin', 'hbin_no', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'wt_sbin_stats_summary', 'splitlot_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'wt_sbin_stats_summary', 'sbin_no', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'ft_sbin_stats_summary', 'splitlot_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'ft_sbin_stats_summary', 'sbin_no', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'wt_hbin_stats_samples', 'splitlot_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'wt_hbin_stats_samples', 'hbin_no', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'ft_hbin_stats_samples', 'splitlot_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'ft_hbin_stats_samples', 'hbin_no', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'wt_hbin_stats_summary', 'splitlot_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'wt_hbin_stats_summary', 'hbin_no', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'ft_hbin_stats_summary', 'splitlot_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'ft_hbin_stats_summary', 'hbin_no', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'wt_sbin_stats_samples', 'splitlot_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'wt_sbin_stats_samples', 'sbin_no', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'ft_sbin_stats_samples', 'splitlot_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'ft_sbin_stats_samples', 'sbin_no', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'et_ptest_stats', 'splitlot_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'et_ptest_stats', 'ptest_info_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'wt_ftest_stats_samples', 'splitlot_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'wt_ftest_stats_samples', 'ftest_info_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'ft_ftest_stats_samples', 'splitlot_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'ft_ftest_stats_samples', 'ftest_info_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'wt_ftest_stats_summary', 'splitlot_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'wt_ftest_stats_summary', 'ftest_info_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'ft_ftest_stats_summary', 'splitlot_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'ft_ftest_stats_summary', 'ftest_info_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'wt_mptest_stats_summary', 'splitlot_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'wt_mptest_stats_summary', 'mptest_info_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'ft_mptest_stats_summary', 'splitlot_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'ft_mptest_stats_summary', 'mptest_info_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'wt_ptest_stats_samples', 'splitlot_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'wt_ptest_stats_samples', 'ptest_info_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'ft_ptest_stats_samples', 'splitlot_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'ft_ptest_stats_samples', 'ptest_info_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'wt_ptest_stats_summary', 'splitlot_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'wt_ptest_stats_summary', 'ptest_info_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'ft_ptest_stats_summary', 'splitlot_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'ft_ptest_stats_summary', 'ptest_info_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'wt_mptest_stats_samples', 'splitlot_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'wt_mptest_stats_samples', 'mptest_info_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'ft_mptest_stats_samples', 'splitlot_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'ft_mptest_stats_samples', 'mptest_info_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'et_run', 'splitlot_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'et_run', 'run_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'et_run', 'hbin_no', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'wt_run', 'splitlot_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'wt_run', 'run_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'wt_run', 'hbin_no', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'ft_run', 'splitlot_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'ft_run', 'run_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'ft_run', 'hbin_no', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'wt_parts_stats_summary', 'splitlot_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'ft_parts_stats_summary', 'splitlot_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'wt_parts_stats_samples', 'splitlot_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'ft_parts_stats_samples', 'splitlot_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'ft_sublot_sbin_inter', 'sbin_no', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'wt_wafer_sbin_inter', 'sbin_no', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'wt_wafer_hbin_inter', 'hbin_no', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'ft_sublot_hbin_inter', 'hbin_no', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'et_wafer_sbin', 'sbin_no', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'wt_wafer_sbin', 'sbin_no', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'ft_sublot_sbin', 'sbin_no', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'et_wafer_hbin', 'hbin_no', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'wt_wafer_hbin', 'hbin_no', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'ft_sublot_hbin', 'hbin_no', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'ft_run_dietrace', 'splitlot_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'ft_dietrace_config', 'splitlot_id', 'DROP DEFAULT', @status, @message);
-- Table structure for table ft_gtl_info
DROP TABLE IF EXISTS ft_gtl_info; 
CREATE TABLE ft_gtl_info (
  splitlot_id int(10) unsigned NOT NULL,
  gtl_key varchar(255) NOT NULL,
  gtl_value varchar(255),
  PRIMARY KEY (splitlot_id,gtl_key)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ;

-- Misc (several small fixes for issues seen during validation)
CALL alter_column(Database(), 'et_lot', 'lot_id', 'DROP DEFAULT', @status, @message);
CALL change_column(Database(), 'et_lot', 'tracking_lot_id', 'varchar(255) NOT NULL', @status, @message);
CALL change_column(Database(), 'et_lot', 'product_name', 'varchar(255) NOT NULL', @status, @message);
CALL alter_column(Database(), 'ft_lot', 'lot_id', 'DROP DEFAULT', @status, @message);
CALL change_column(Database(), 'ft_lot', 'tracking_lot_id', 'varchar(255) NOT NULL', @status, @message);
CALL change_column(Database(), 'ft_lot', 'product_name', 'varchar(255) NOT NULL', @status, @message);
CALL alter_column(Database(), 'wt_lot', 'lot_id', 'DROP DEFAULT', @status, @message);
CALL change_column(Database(), 'wt_lot', 'tracking_lot_id', 'varchar(255) NOT NULL', @status, @message);
CALL change_column(Database(), 'wt_lot', 'product_name', 'varchar(255) NOT NULL', @status, @message);
CALL alter_column(Database(), 'ft_sublot_info', 'lot_id', 'DROP DEFAULT', @status, @message);
CALL alter_column(Database(), 'ft_sublot_info', 'sublot_id', 'DROP DEFAULT', @status, @message);
CALL change_column(Database(), 'ft_sublot_info', 'product_name', 'varchar(255) NOT NULL', @status, @message);

-- ---------------------------------------------------------
-- STOP UPDATE
-- ---------------------------------------------------------
CALL stop_update(@status, @message);


