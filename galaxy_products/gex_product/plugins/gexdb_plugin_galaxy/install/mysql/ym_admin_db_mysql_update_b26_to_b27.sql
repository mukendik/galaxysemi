-- ---------------------------------------------------------
-- DO NOT EDIT THIS FILE UNLESS:
-- o To customize the update
-- o To execute it manually
-- ---------------------------------------------------------



-- ---------------------------------------------------------
-- Caution messages below are not commented to make sure that
-- scripts are in the right state before to be ran manually
-- ---------------------------------------------------------
CAUTION: when running manually that script make sure to uncomment the line below to specify a working database
-- use database_name_xx;
CAUTION: when running manually that script make sure to comment each lines: "DECLARE EXIT HANDLER FOR SQLEXCEPTION" (if it exists) to be sure to catch all errors
CAUTION: when running manually that script make sure to source the script common_update_initialize.sql, then admin_update_initialize.sql before
CAUTION: when running manually that script make sure to source the script admin_update_finalize.sql, then common_update_finalize.sql after
CAUTION: 4. After running the last TDR update script, run the script tdr_update_finalize.sql, then common_update_finalize.sql.

-- ---------------------------------------------------------
-- START UPDATE
-- ---------------------------------------------------------
CALL is_admin_compatible_version(26, @status, @message);
CALL start_admin_update('Yield-Man Administration Server', 27, '6.1', @status, @message);

-- ---------------------------------------------------------
-- UPDATE
-- ---------------------------------------------------------

CALL add_column_if_not_exists(Database(), 'ym_sya', 'test_flow', 'varchar(45) NOT NULL', @status, @message);
CALL modify_column(           Database(), 'ym_sya', 'test_flow', 'varchar(45) NOT NULL AFTER `monitored_item_regexp`', @status, @message);

CALL add_column_if_not_exists(Database(), 'ym_sya', 'consolidation_type', 'varchar(45) NOT NULL', @status, @message);
CALL modify_column(           Database(), 'ym_sya', 'consolidation_type', 'varchar(45) NOT NULL AFTER `test_flow`', @status, @message);

CALL add_column_if_not_exists(Database(), 'ym_sya', 'consolidation_aggregation_level', 'varchar(45) NOT NULL', @status, @message);
CALL modify_column(           Database(), 'ym_sya', 'consolidation_aggregation_level', 'varchar(45) NOT NULL AFTER `consolidation_type`', @status, @message);

CALL add_column_if_not_exists(Database(), 'ym_sya', 'site_merge_mode', 'varchar(45) NOT NULL', @status, @message);
CALL modify_column(           Database(), 'ym_sya', 'site_merge_mode', 'varchar(45) NOT NULL AFTER `consolidation_name_regexp`', @status, @message);

CALL add_column_if_not_exists(Database(), 'ym_spm', 'test_flow', 'varchar(45) NOT NULL', @status, @message);
CALL modify_column(           Database(), 'ym_spm', 'test_flow', 'varchar(45) NOT NULL AFTER `monitored_item_regexp`', @status, @message);

CALL add_column_if_not_exists(Database(), 'ym_spm', 'consolidation_type', 'varchar(45) NOT NULL', @status, @message);
CALL modify_column(           Database(), 'ym_spm', 'consolidation_type', 'varchar(45) NOT NULL AFTER `test_flow`', @status, @message);

CALL add_column_if_not_exists(Database(), 'ym_spm', 'consolidation_aggregation_level', 'varchar(45) NOT NULL', @status, @message);
CALL modify_column(           Database(), 'ym_spm', 'consolidation_aggregation_level', 'varchar(45) NOT NULL AFTER `consolidation_type`', @status, @message);

CALL add_column_if_not_exists(Database(), 'ym_spm', 'site_merge_mode', 'varchar(45) NOT NULL', @status, @message);
CALL modify_column(           Database(), 'ym_spm', 'site_merge_mode', 'varchar(45) NOT NULL AFTER `consolidation_name_regexp`', @status, @message);

-- ---------------------------------------------------------
-- STOP UPDATE
-- ---------------------------------------------------------
CALL stop_admin_update(@status, @message);
